{"version":3,"file":"static/js/183.5d054744.chunk.js","mappings":"2LAaaA,EAAqBC,EAAAA,cAA6C,M,wBCMzE,SAAUC,EAAqBC,GACnC,MAAO,CACLC,UAAWD,EAAGE,OAAOC,IACrBC,SAAUJ,EAAGE,OAAOG,IACpBC,KAAMN,EAAGM,KACTC,MAAOP,EAAGO,MACVC,QAASR,EAAGQ,QACZC,QAAST,EAAGS,QAEhB,CASM,SAAUC,EAA0BV,EAAeW,GACvD,IAAMC,EAAwBD,EAAME,WAAaF,EAC7CG,GAAU,EAEd,GAAI,cAAeF,GAAK,aAAcA,EAAG,CACvC,IAAMV,EAASF,EAAGE,OAElBF,EAAGE,OAAS,IAAIA,EAAOa,YAAYH,EAAEX,UAAWW,EAAER,UAClDU,EAAUA,GAAWZ,IAAWF,EAAGE,M,CAErC,GAAI,SAAUU,EAAG,CACf,IAAMN,EAAON,EAAGM,KAChBN,EAAGM,KAAOM,EAAEN,KACZQ,EAAUA,GAAWR,IAASN,EAAGM,I,CAEnC,GAAI,YAAaM,EAAG,CAClB,IAAMJ,EAAUR,EAAGQ,QACnBR,EAAGQ,QAAUI,EAAEJ,QACfM,EAAUA,GAAWN,IAAYR,EAAGQ,O,CAEtC,GAAI,UAAWI,EAAG,CAChB,IAAML,EAAQP,EAAGO,MACjBP,EAAGO,MAAQK,EAAEL,MACbO,EAAUA,GAAWP,IAAUP,EAAGO,K,CAMpC,OAJIK,EAAEH,UAAYT,EAAGgB,eAAeJ,EAAEH,WACpCK,GAAU,EACVd,EAAGS,QAAUG,EAAEH,SAEVK,CACT,C,cCjEMG,EAAW,CAAC,OAAQ,SAAU,eAAgB,UAAW,UAAW,SAAU,UAK9E,SAAUC,EACdC,GAEA,IAAKA,EACH,OAAO,KAET,GAAqB,kBAAVA,EACT,OAAOA,EAKT,GAHI,SAAUA,IACZA,EAAQA,EAAMC,SAEXD,EAAME,OACT,OAAOF,EAET,IAEgCG,EAF1BC,EAAa,CAAC,EAAEC,GAAAC,EAAAA,EAAAA,GAEFN,EAAME,QAAM,IAAhC,IAAAG,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAkC,KAAvBC,EAAKP,EAAAQ,MACdP,EAAWM,EAAME,IAAMF,C,CACxB,OAAAG,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CAED,IAAMb,EAASF,EAAME,OAAOc,KAAI,SAAAN,GAC9B,IAAIO,EAAgC,KAEhC,gBAAiBP,UACnBO,EAAkBC,OAAOC,OAAO,CAAC,EAAGT,IAGbU,YAKzB,IAAMC,EAAWjB,EAAWM,EAAMY,KAClC,GAAID,EAAU,QACZJ,EAAkBA,GAAmBC,OAAOC,OAAO,CAAC,EAAGT,IAEhCY,IACvB,IAC+BC,EAD/BC,GAAAlB,EAAAA,EAAAA,GACuBR,GAAQ,IAA/B,IAAA0B,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAAiC,KAAtBgB,EAAQF,EAAAZ,MACbc,KAAYJ,IACdJ,EAAgBQ,GAAYJ,EAASI,G,CAExC,OAAAZ,GAAAW,EAAAV,EAAAD,EAAA,SAAAW,EAAAT,GAAA,C,CAGH,OAAOE,GAAmBP,CAC5B,IAGA,OAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW1B,GAAK,IAAEE,OAAAA,GACpB,CCnCM,SAAUyB,EAAUC,EAAQC,GAChC,GAAID,IAAMC,EACR,OAAO,EAET,IAAKD,IAAMC,EACT,OAAO,EAET,GAAIC,MAAMC,QAAQH,GAAI,CACpB,IAAKE,MAAMC,QAAQF,IAAMD,EAAEI,SAAWH,EAAEG,OACtC,OAAO,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAEI,OAAQC,IAC5B,IAAKN,EAAUC,EAAEK,GAAIJ,EAAEI,IACrB,OAAO,EAGX,OAAO,C,CACF,GAAIH,MAAMC,QAAQF,GACvB,OAAO,EAET,GAAiB,kBAAND,GAA+B,kBAANC,EAAgB,CAClD,IAAMK,EAAQhB,OAAOiB,KAAKP,GACpBQ,EAAQlB,OAAOiB,KAAKN,GAC1B,GAAIK,EAAMF,SAAWI,EAAMJ,OACzB,OAAO,EAET,IAAK,IAALK,EAAA,EAAAC,EAAkBJ,EAAKG,EAAAC,EAAAN,OAAAK,IAAE,CAApB,IAAME,EAAGD,EAAAD,GACZ,IAAKR,EAAEW,eAAeD,GACpB,OAAO,EAET,IAAKZ,EAAUC,EAAEW,GAAMV,EAAEU,IACvB,OAAO,C,CAGX,OAAO,C,CAET,OAAO,CACT,CCmEA,IAAME,EAAgB,CAACC,QAAS,EAAGC,QAAS,CAAC,EAAGzC,OAAQ,IAElD0C,EAAgB,CACpBC,UAAW,cACXC,QAAS,YACTC,UAAW,cACXC,UAAW,cACXC,MAAO,UACPC,SAAU,aACVC,WAAY,eACZC,WAAY,eACZC,SAAU,aACVC,YAAa,gBACbC,WAAY,eACZC,SAAU,aACVC,UAAW,cACXC,YAAa,iBAETC,EAAe,CACnBC,UAAW,cACXC,KAAM,SACNC,QAAS,YACTC,UAAW,cACXC,KAAM,SACNC,QAAS,YACTC,UAAW,cACX/E,KAAM,SACNgF,QAAS,YACTC,YAAa,gBACbC,OAAQ,WACRC,UAAW,cACXC,WAAY,eACZnF,MAAO,UACPoF,SAAU,cAENC,EAAc,CAClBC,MAAO,UACPC,aAAc,iBACdC,WAAY,eACZC,cAAe,kBACfC,OAAQ,WACRC,KAAM,SACNC,OAAQ,WACRC,KAAM,SACNC,OAAQ,WACRC,KAAM,SACNC,UAAW,cACXC,WAAY,eACZC,MAAO,WAEHC,EAAe,CACnB,UACA,UACA,WACA,WACA,YACA,aACA,qBAEIC,EAAe,CACnB,aACA,UACA,aACA,UACA,WACA,kBACA,kBACA,cAMmBC,EAAM,WAiCzB,SAAAA,EACEC,EACAlG,EACAmG,GAAyB,IAAAC,EAAA,MAAAC,EAAAA,EAAAA,GAAA,KAAAJ,GAjCnB,KAAAK,KAAkC,KAalC,KAAAC,iBAA2B,EAC3B,KAAAC,WAAqB,EACrB,KAAAC,iBAAwC,KACxC,KAAAC,gBAKJ,CACFrC,MAAM,EACN1E,MAAM,EACNC,OAAO,EACPiF,QAAQ,GA+XV,KAAA8B,SAAW,SAACrF,GAEV,IAAMsF,EAAKR,EAAKpG,MAAMiF,EAAY3D,EAAEuF,OAChCD,EACFA,EAAGtF,GACiB,UAAXA,EAAEuF,MACXC,QAAQhB,MAAOxE,EAAuBwE,MAE1C,EAyCA,KAAAiB,gBAAkB,SAACzF,GACF,cAAXA,EAAEuF,MAAmC,aAAXvF,EAAEuF,MAC9BT,EAAKY,aAAa1F,GAIpB,IAAMsF,EAAKR,EAAKpG,MAAMoD,EAAc9B,EAAEuF,OAClCD,IACER,EAAKpG,MAAMiH,qBAAkC,cAAX3F,EAAEuF,MAAmC,aAAXvF,EAAEuF,OAChEvF,EAAE4F,SAAWd,EAAKK,kBAAoBL,EAAKe,uBAAuB7F,EAAE8F,QAEtER,EAAGtF,UACIA,EAAE4F,SAEb,EAEA,KAAAG,eAAiB,SAAC/F,GAChB,IAAK8E,EAAKG,gBAAiB,CAEzB,IAAMK,EAAKR,EAAKpG,MAAMmE,EAAa7C,EAAEuF,OACjCD,GACFA,EAAGtF,E,CAGHA,EAAEuF,QAAQT,EAAKM,kBACjBN,EAAKM,gBAAgBpF,EAAEuF,OAAQ,EAEnC,EAjcES,KAAKC,UAAYrB,EACjBoB,KAAKtH,MAAQA,EACbsH,KAAKE,YAAYrB,EACnB,CAuFC,OAvFAsB,EAAAA,EAAAA,GAAAxB,EAAA,EAAAlD,IAAA,MAAA2E,IAED,WACE,OAAOJ,KAAKhB,IACd,GAAC,CAAAvD,IAAA,YAAA2E,IAED,WACE,OAAOJ,KAAKK,gBACd,GAAC,CAAA5E,IAAA,WAAA5B,MAED,SAASnB,GACP,IAAM4H,EAAWN,KAAKtH,MACtBsH,KAAKtH,MAAQA,EAEb,IAAM6H,EAAkBP,KAAKQ,gBAAgB9H,EAAO4H,GAChDC,GACFP,KAAKS,uBAAuBT,KAAKhB,MAEnC,IAAM0B,EAAcV,KAAKW,YAAYjI,GAC/BkI,EAAmBZ,KAAKa,iBAAiBnI,GAAO,GACtDsH,KAAKc,aAAapI,EAAO4H,GACzBN,KAAKe,uBAAuBrI,EAAO4H,GACnCN,KAAKgB,gBAAgBtI,EAAO4H,IAKxBC,GAAmBG,GAAgBE,IAAqBZ,KAAKhB,KAAKiC,aACpEjB,KAAKkB,QAET,GAAC,CAAAzF,IAAA,cAAA5B,MA4DD,SAAYgF,GAAyB,IAAAsC,EAAA,KAC5BzI,EAASsH,KAATtH,MACP0I,EAAmC1I,EAA5B2I,SAAAA,OAAQ,IAAAD,EAAGzF,EAAayF,EACzBE,GAAU1G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXlC,GACAA,EAAM6I,kBAAgB,IACzBC,YAAa9I,EAAM+I,mBAAqBC,KAA2B,KACnE7C,UAAAA,EACA3F,MAAOD,EAAeoI,KAGlBzI,EAAY0I,EAAWC,kBAAoBD,EAAW1I,WAAa0I,EAQzE,GAPAlH,OAAOC,OAAOiH,EAAY,CACxBrJ,OAAQ,CAACW,EAAUZ,WAAa,EAAGY,EAAUT,UAAY,GACzDE,KAAMO,EAAUP,MAAQ,EACxBC,MAAOM,EAAUN,OAAS,EAC1BC,QAASK,EAAUL,SAAW,IAG5BG,EAAMiJ,GAAI,CAEZ,IAAMC,EAAaC,kBAAkBC,UAAUF,WAI/CC,kBAAkBC,UAAUF,WAAa,WAGvC,OADAC,kBAAkBC,UAAUF,WAAaA,EAClClJ,EAAMiJ,EACf,C,CAGF,IAAMzH,EAAM,IAAI8F,KAAKC,UAAUqB,GAE3B1I,EAAUJ,SACZ0B,EAAI6H,WAAWnJ,EAAUJ,SAEvBE,EAAMsJ,SACR9H,EAAI+H,YAAY/I,MAAM8I,OAAStJ,EAAMsJ,QAEvChC,KAAKS,uBAAuBvG,GAI5B,IAAMgI,EAAYhI,EAAIiI,QACtBjI,EAAIiI,QAAU,SAACC,GACbjB,EAAKjC,WAAY,EACjBgD,EAAUG,KAAKnI,EAAKkI,GACpBjB,EAAKjC,WAAY,CACnB,EACA,IAAMoD,EAAqBpI,EAAIqI,iBAAiBC,IAChDtI,EAAIqI,iBAAiBC,IAAM,SAACJ,GAC1BE,EAAmBD,KAAKnI,EAAIqI,iBAAkBH,GAC9CjB,EAAKsB,kBACP,EACAvI,EAAIwI,GAAG,UAAU,kBAAMvB,EAAKwB,iBAAiB,IAG7C,IAAMC,EAAY1I,EAAI2I,KAStB,IAAK,IAAMC,KARX5I,EAAI2I,KAAO7C,KAAK+C,WAAWC,KAAKhD,KAAM4C,GAGtC1I,EAAIwI,GAAG,UAAU,WACfvB,EAAKd,iBAAiBrC,OAAO9D,EAAI+I,UAAUC,MAAOhJ,EAAI+I,UAAUE,OAClE,IACAjJ,EAAIwI,GAAG,aAAa,kBAAMvB,EAAKJ,uBAAuBI,EAAKzI,MAAO,CAAC,EAAE,IACrEwB,EAAIwI,GAAG,cAAc,kBAAMvB,EAAKJ,uBAAuBI,EAAKzI,MAAO,CAAC,EAAE,IAC9CoD,EACtB5B,EAAIwI,GAAGI,EAAW9C,KAAKP,iBAEzB,IAAK,IAAMqD,KAAajG,EACtB3C,EAAIwI,GAAGI,EAAW9C,KAAKD,gBAEzB,IAAK,IAAM+C,KAAanF,EACtBzD,EAAIwI,GAAGI,EAAW9C,KAAKX,UAEzBW,KAAKhB,KAAO9E,CACd,GACA,CAAAuB,IAAA,UAAA5B,MAEA,WAEE,IACMuJ,EADYpD,KAAK9F,IAAImJ,eACAC,cAAc,uBACjC,OAARF,QAAQ,IAARA,GAAAA,EAAUhF,SAEVO,EAAO4E,UAAUC,KAAKxD,KACxB,GAAC,CAAAvE,IAAA,UAAA5B,MAED,WACEmG,KAAKhB,KAAKZ,QACZ,GAIA,CAAA3C,IAAA,SAAA5B,MACA,WACE,IAAMK,EAAM8F,KAAKhB,MAIZgB,KAAKd,WAAahF,EAAIhB,QAErBgB,EAAIuJ,SACNvJ,EAAIuJ,OAAOC,SACXxJ,EAAIuJ,OAAS,MAGfvJ,EAAIiI,UAER,GAAC,CAAA1G,IAAA,yBAAA5B,MAED,SAAuBK,GACrB,IAAMyJ,EHrbJ,SAAyB5L,GAC7B,IAAM6L,EAAe7L,EAAG8L,QAGxB,OADAD,EAAaE,gBAAkB/L,EAAG+L,gBAC3BF,CACT,CGgb4BG,CAAe7J,EAAI+I,WAC3C/I,EAAI8J,QAAQf,UAAYU,EAExB3D,KAAKK,iBAAmBsD,CAC1B,GAEA,CAAAlI,IAAA,cAAA5B,MAIA,SAAYoK,GAEV,IAAOrL,EAAaqL,EAAbrL,UACP,GAAIA,EAAW,CACb,IAAMsB,EAAM8F,KAAKhB,KACjB,GAAIpG,EAAUsK,QAAUhJ,EAAI+I,UAAUC,OAAStK,EAAUuK,SAAWjJ,EAAI+I,UAAUE,OAEhF,OADAjJ,EAAI8D,UACG,C,CAGX,OAAO,CACT,GAGA,CAAAvC,IAAA,mBAAA5B,MAKA,SAAiBoK,EAA8BC,GAC7C,GAAIlE,KAAKf,gBACP,OAAO,EAET,IAAM/E,EAAM8F,KAAKhB,KAEXjH,EAAKiI,KAAKK,iBAEThI,EAAwBN,EAAxBM,KAAMC,EAAkBP,EAAlBO,MAAOC,EAAWR,EAAXQ,QACd0I,EAAW/G,EAAI+G,WAEjBA,IAEFlJ,EAAGoM,yBAA2B,OAEhC,IAAMtL,EAAUJ,EAA0BV,GAAE6C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvC9C,EAAqBoC,EAAI+I,YACzBgB,IAOL,GALIhD,IAEFlJ,EAAGoM,yBAA2B,UAG5BtL,GAAWqL,EAAe,CAC5B,IAAME,EAAiBpE,KAAKZ,gBAE5BgF,EAAerH,MAAO,EACtBqH,EAAe/L,OAAf+L,EAAe/L,KAASA,IAASN,EAAGM,MACpC+L,EAAe7G,SAAf6G,EAAe7G,OAAWhF,IAAYR,EAAGQ,SACzC6L,EAAe9L,QAAf8L,EAAe9L,MAAUA,IAAUP,EAAGO,M,CASxC,OAJK2I,GACHxI,EAA0ByB,EAAI+I,UAAWgB,GAGpCpL,CACT,GAEA,CAAA4C,IAAA,kBAAA5B,MAKA,SAAgBoK,EAA8BI,GAG5C,IAFA,IAAMnK,EAAM8F,KAAKhB,KACbnG,GAAU,EACd0C,EAAA,EAAA+I,EAAuB7F,EAAYlD,EAAA+I,EAAApJ,OAAAK,IAAE,CAAhC,IAAMZ,EAAQ2J,EAAA/I,GACjB,GAAIZ,KAAYsJ,IAAcpJ,EAAUoJ,EAAUtJ,GAAW0J,EAAU1J,IAAY,CACjF9B,GAAU,EACV,IAAM0L,EAASrK,EAAI,MAADsK,OAAO7J,EAAS,GAAG8J,eAAaD,OAAG7J,EAAS+J,MAAM,KAC9D,OAANH,QAAM,IAANA,GAAAA,EAAQlC,KAAKnI,EAAK+J,EAAUtJ,G,EAGhC,OAAO9B,CACT,GAEA,CAAA4C,IAAA,eAAA5B,MAKA,SAAaoK,EAA8BI,GAIzC,GAHIJ,EAAUjC,SAAWqC,EAAUrC,SACjChC,KAAKhB,KAAKiD,YAAY/I,MAAM8I,OAASiC,EAAUjC,QAE7CiC,EAAU5C,WAAagD,EAAUhD,SAAU,CAC7C,IAAAsD,EAAwDV,EAAjD5C,SAAAA,OAAQ,IAAAsD,EAAGhJ,EAAagJ,EAAAC,EAAyBX,EAAvBY,aAC3BC,EAAe,CACnBC,UAF2C,IAAAH,GAAOA,GASpD,MALI,6BAA8BX,IAEhCa,EAAQE,yBAA2Bf,EAAUe,0BAE/ChF,KAAKhB,KAAKiG,SAAShM,EAAeoI,GAAWyD,IACtC,C,CAET,OAAO,CACT,GAEA,CAAArJ,IAAA,yBAAA5B,MAKA,SAAuBoK,EAA8BI,GACnD,IAAMnK,EAAM8F,KAAKhB,KACbnG,GAAU,EAqBd,OApBIqB,EAAIgL,kBACF,UAAWjB,GAAa/J,EAAIiL,WAAatK,EAAUoJ,EAAUmB,MAAOf,EAAUe,SAChFvM,GAAU,EACVqB,EAAIiL,SAASlB,EAAUmB,QAErB,QAASnB,GAAa/J,EAAImL,SAAWxK,EAAUoJ,EAAUqB,IAAKjB,EAAUiB,OAC1EzM,GAAU,EACVqB,EAAImL,OAAOpB,EAAUqB,MAGrB,YAAarB,GACb/J,EAAIqL,aACH1K,EAAUoJ,EAAUuB,QAASnB,EAAUmB,WAEnCvB,EAAUuB,UAAWtL,EAAIuL,UAAUxB,EAAUuB,QAAQE,UACxD7M,GAAU,EACVqB,EAAIqL,WAAWtB,EAAUuB,YAIxB3M,CACT,GAEA,CAAA4C,IAAA,kBAAA5B,MAKA,SAAgBoK,EAA8BI,GAG5C,I,QAFMnK,EAAM8F,KAAKhB,KACbnG,GAAU,EACd8M,EAAA,EAAAC,EAAuBlH,EAAYiH,EAAAC,EAAA1K,OAAAyK,IAAE,CAAhC,IAAMhL,EAAQiL,EAAAD,GACXE,EAA8B,QAAnBC,EAAA7B,EAAUtJ,UAAS,IAAAmL,GAAAA,EAE/BjL,EAAUgL,EADqB,QAAnBE,EAAA1B,EAAU1J,UAAS,IAAAoL,GAAAA,KAElClN,GAAU,EACNgN,EACF3L,EAAIS,GAAUqL,OAAOH,GAErB3L,EAAIS,GAAUsL,U,CAIpB,OAAOpN,CACT,GAAC,CAAA4C,IAAA,yBAAA5B,MAYO,SAAuBiG,GAC7B,IAAM5F,EAAM8F,KAAKhB,KACjBkH,EAAmClG,KAAKtH,MAAjCiH,oBAAAA,OAAmB,IAAAuG,EAAG,GAAEA,EAC/B,IACE,OAAOhM,EAAIiM,sBAAsBrG,EAAO,CACtC1G,OAAQuG,EAAoByG,OAAOlM,EAAImM,SAASrD,KAAK9I,K,CAEvD,MAAA4L,GAEA,MAAO,E,CAEX,GAAC,CAAArK,IAAA,eAAA5B,MAED,SAAaG,G,MACJtB,EAASsH,KAATtH,MAIP,GAFEA,EAAMiH,sBAAwBjH,EAAM4N,aAAe5N,EAAM6N,cAAgB7N,EAAM8N,cAEjD,CAC9B,IAAMC,EAAYzM,EAAEuF,KACdmH,GAAmC,QAArBZ,EAAA9F,KAAKb,wBAAgB,IAAA2G,OAAA,EAAAA,EAAE5K,QAAS,EAC9C0E,EAAWI,KAAKH,uBAAuB7F,EAAE8F,OACzC6G,EAAa/G,EAAS1E,OAAS,GAEhCyL,GAAcD,IACjB1M,EAAEuF,KAAO,aACTS,KAAKP,gBAAgBzF,IAEvBgG,KAAKb,iBAAmBS,EACpB+G,IAAeD,IACjB1M,EAAEuF,KAAO,aACTS,KAAKP,gBAAgBzF,IAEvBA,EAAEuF,KAAOkH,C,MAETzG,KAAKb,iBAAmB,IAE5B,GAAC,CAAA1D,IAAA,aAAA5B,MA+BD,SAAW+M,EAAoBC,EAAgCC,GAC7D,IAAM5M,EAAM8F,KAAKhB,KACXjH,EAAKmC,EAAI+I,UAETwD,EAA6B,kBAAVI,EAAqBA,EAAQA,EAAMtH,KAI5D,MAHkB,SAAdkH,GACFzG,KAAKa,iBAAiBb,KAAKtH,OAAO,GAEhC+N,KAAa5J,IACM,kBAAVgK,IACRA,EAAgDjO,UAAYd,EAAqBC,IAEhFiI,KAAKhB,KAAKiC,aAEZ/G,EAAI+I,UAAYjD,KAAKK,iBACrBuG,EAASvE,KAAKnI,EAAK2M,EAAOC,GAC1B5M,EAAI+I,UAAYlL,EAETmC,IAGX0M,EAASvE,KAAKnI,EAAK2M,EAAOC,GAEnB5M,EACT,GAEA,CAAAuB,IAAA,mBAAA5B,MACA,WAAgB,IAAAkN,EAAA,KACR7M,EAAM8F,KAAKhB,KAIjB,IAAK,IAAMyH,KADXzG,KAAKf,iBAAkB,EACCe,KAAKZ,gBACvBY,KAAKZ,gBAAgBqH,IACvBvM,EAAI2I,KAAK4D,GAGbzG,KAAKf,iBAAkB,EAEvB,IAAMlH,EAAKiI,KAAKhB,KAAKiE,UAErBjD,KAAKhB,KAAKiE,UAAYjD,KAAKK,iBAE3BL,KAAK2C,gBAAkB,WAErBoE,EAAK/H,KAAKiE,UAAYlL,CACxB,CACF,IAAC,EAAA0D,IAAA,QAAA5B,MA/cD,SACEnB,EACAmG,GAEA,IAAMmI,EAAOrI,EAAO4E,UAAU0D,MAC9B,IAAKD,EACH,OAAO,KAGT,IAAM9M,EAAM8M,EAAK9M,IAIXgN,EAAehN,EAAImJ,eAEzB,IADAxE,EAAUsI,UAAYD,EAAaC,UAC5BD,EAAaE,WAAWlM,OAAS,GACtC2D,EAAUwI,YAAYH,EAAaE,WAAW,IAIhDlN,EAAIoN,WAAazI,EAMjB,IAAM0I,EAAiBrN,EAAIsN,gBACvBD,IACFA,EAAeE,aACfF,EAAeG,QAAQ7I,IAIzBmI,EAAKW,UAAQ/M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAGlC,GAAK,IAAEmM,cAAc,KACvC3K,EAAI8D,SACJ,IAAOuD,EAAoB7I,EAApB6I,iBAmBP,OAlBIA,IACEA,EAAiBqG,OACnB1N,EAAI2N,UAAUtG,EAAiBqG,QAAMhN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM2G,EAAiBuG,kBAAgB,IAAEC,SAAU,KAExFf,EAAKnG,iBAAiBU,GAAkB,IAKxCrH,EAAIgL,gBACNhL,EAAI2I,KAAK,QAET3I,EAAI8N,KAAK,aAAa,kBAAM9N,EAAI2I,KAAK,OAAO,IAK9C3I,EAAI+N,UACGjB,CACT,KAACrI,CAAA,CAhIwB,GAqiB3B,SAAS+C,IACP,IAAIF,EAAc,KAGlB,GAAwB,qBAAb0G,SAA0B,CACnC,IAAMC,EAAQ,yBAAyBC,KAAKF,SAASG,QACrD7G,EAAc2G,GAASA,EAAM,E,CAI/B,IACE3G,EAAcA,GAAe8G,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,iB,CACzC,MAAAzC,GACA,CAGF,IACEtE,EAAcA,GAAe8G,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYE,6B,CACzC,MAAAzC,GACA,CAGF,OAAOvE,CACT,CA7hBS7C,EAAA4E,UAAsB,GCnO/B,IAAMkF,EAAc,CAClB,eACA,aACA,aACA,cACA,cACA,uBACA,gBACA,WACA,YACA,eACA,WACA,cACA,oBACA,YACA,mBACA,oBACA,WACA,aACA,SACA,UAOY,SAAUC,EACtBC,GAEA,IAAKA,EACH,OAAO,KAGT,IAmCqCtP,EAnC/Ba,EAAMyO,EAAYzO,IAClB0O,EAAc,CAClBC,OAAQ,kBAAM3O,CAAG,EAGjB4O,UAAW,kBAAMH,EAAY1F,UAAUhL,MAAM,EAC7C8Q,QAAS,kBAAMJ,EAAY1F,UAAU5K,IAAI,EACzC2Q,WAAY,kBAAML,EAAY1F,UAAU1K,OAAO,EAC/C0Q,SAAU,kBAAMN,EAAY1F,UAAU3K,KAAK,EAC3C4Q,WAAY,kBAAMP,EAAY1F,UAAUzK,OAAO,EAC/C2Q,UAAW,kBAAMR,EAAY1F,UAAUkG,WAAW,EAClDC,QAAS,SAACC,GACR,IAAMtR,EAAKmC,EAAI+I,UACf/I,EAAI+I,UAAY0F,EAAY1F,UAC5B,IAAM2F,EAAS1O,EAAIkP,QAAQC,GAE3B,OADAnP,EAAI+I,UAAYlL,EACT6Q,CACT,EACAU,UAAW,SAACxJ,GACV,IAAM/H,EAAKmC,EAAI+I,UACf/I,EAAI+I,UAAY0F,EAAY1F,UAC5B,IAAM2F,EAAS1O,EAAIoP,UAAUxJ,GAE7B,OADA5F,EAAI+I,UAAYlL,EACT6Q,CACT,EAEAW,sBAAuB,SAACF,EAAoBvE,GAC1C,IAAM/M,EAAKmC,EAAI+I,UACf/I,EAAI+I,UAAY0F,EAAY1F,UAC5B,IAAM2F,EAAS1O,EAAIqP,sBAAsBF,EAAQvE,GAEjD,OADA5K,EAAI+I,UAAYlL,EACT6Q,CACT,GACArP,GAAAC,EAAAA,EAAAA,GAYJ,SAAwBgQ,GACtB,IAAMZ,EAAS,IAAIa,IAEfC,EAAQF,EACZ,KAAOE,GAAO,KACuCjP,EADvCC,GAAAlB,EAAAA,EAAAA,GACMY,OAAOuP,oBAAoBD,IAAM,IAAnD,IAAAhP,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAAqD,KAA1C8B,EAAGhB,EAAAZ,MAEC,MAAX4B,EAAI,IACgB,oBAAb+N,EAAI/N,IACH,SAARA,GACQ,qBAARA,GAEAmN,EAAOgB,IAAInO,E,CAEd,OAAA1B,GAAAW,EAAAV,EAAAD,EAAA,SAAAW,EAAAT,GAAA,CACDyP,EAAQtP,OAAOyP,eAAeH,E,CAEhC,OAAO1O,MAAM8O,KAAKlB,EACpB,CA5BoBmB,CAAe7P,IAAI,IAArC,IAAAX,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAuC,KAA5B8B,EAAGpC,EAAAQ,MAEN4B,KAAOmN,GAAYH,EAAYuB,SAASvO,KAC5CmN,EAAOnN,GAAOvB,EAAIuB,GAAKuH,KAAK9I,G,CAE/B,OAAAH,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CAED,OAAO2O,CACT,CC7EA,IAEA,EAFsD,qBAAbqB,SAA2BC,EAAAA,gBAAkBC,EAAAA,UCkBhFC,EAAiB,CACrB,aACA,2BACA,cACA,cACA,aCVK,IAAMC,EAAaxS,EAAAA,cAAqC,MAmBjD,SAAUyS,EACtB5R,EACA8B,EACA+P,GAEA,IAAMC,GAAqBC,EAAAA,EAAAA,YAAW7S,GACtC8S,GAAsCC,EAAAA,EAAAA,UAAuB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3D/B,EAAWiC,EAAA,GAAEE,EAAcF,EAAA,GAC5BG,GAAeC,EAAAA,EAAAA,UAELC,GAAgBD,EAAAA,EAAAA,QAA8B,CAACE,OAAQ,KAAMhR,IAAK,OAA3EiR,SAEPhB,EAAAA,EAAAA,YAAU,WACR,IAEIiB,EAFEF,EAASxS,EAAMwS,OACjBG,GAAY,EAiDhB,OA9CAC,QAAQC,QAAQL,GAAUX,GACvBiB,MAAK,SAACC,GACL,GAAKJ,EAAL,CAGA,IAAKI,EACH,MAAM,IAAIC,MAAM,kBAElB,IAAMC,EAAW,QAASF,EAASA,EAASA,EAAOG,QACnD,IAAKD,EAASrB,IACZ,MAAM,IAAIoB,MAAM,kBAMlB,GDtCM,SAAqBR,EAAaxS,GAAqB,IACnCW,EADmCE,GAAAC,EAAAA,EAAAA,GACjD4Q,GAAc,IAAhC,IAAA7Q,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAAkC,KAAvB8B,EAAGpC,EAAAQ,MACR4B,KAAO/C,IACTwS,EAAOzP,GAAO/C,EAAM+C,G,CAEvB,OAAA1B,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,CAED,IAAA4R,EAEInT,EADFoT,cAAAA,OAAa,IAAAD,EAAG,8FAA6FA,EAG7GC,GACAZ,EAAOa,wBAC6B,gBAApCb,EAAOa,0BAEPb,EAAOc,iBACLF,GACA,SAACtN,GACKA,GAEFgB,QAAQhB,MAAMA,EAElB,IACA,EAGN,CCWQyN,CAAWN,EAAUjT,GAChBiT,EAASO,YAAaP,EAASO,UAAUxT,GAa5C,MAAM,IAAIgT,MAAM,wCAZZhT,EAAMyT,YACRf,EAASzM,EAAOyN,MAAM1T,EAAOqS,EAAaI,UAEvCC,IACHA,EAAS,IAAIzM,EAAOgN,EAASrB,IAAK5R,EAAOqS,EAAaI,UAExDF,EAAa/Q,IAAMwO,EAAU0C,GAC7BH,EAAaC,OAASS,EAEtBb,EAAeM,GACG,OAAlBZ,QAAkB,IAAlBA,GAAAA,EAAoB6B,WAAWpB,EAAa/Q,IAAKxB,EAAMoB,G,CAI3D,IACCwS,OAAM,SAAA9N,GACL,IAAO+N,EAAW7T,EAAX6T,QACHA,EACFA,EAAQ,CACNhN,KAAM,QACNiN,OAAQ,KACRC,cAAe,KACfjO,MAAAA,IAGFgB,QAAQhB,MAAMA,EAElB,IAEK,WACL6M,GAAY,EACRD,IACgB,OAAlBZ,QAAkB,IAAlBA,GAAAA,EAAoBkC,aAAahU,EAAMoB,IACnCpB,EAAMyT,UACRf,EAAOuB,UAEPvB,EAAOwB,UAGb,CACF,GAAG,IAEHC,GAA0B,WACpBlE,GACFA,EAAYhB,SAASjP,EAEzB,KAEAoU,EAAAA,EAAAA,qBAAoBtS,GAAK,kBAAMyQ,EAAa/Q,GAAG,GAAE,CAACyO,IAElD,IAAMzP,GAAuB6T,EAAAA,EAAAA,UAC3B,kBAAAnS,EAAAA,EAAAA,GAAC,CACCoS,SAAU,WACV9J,MAAO,OACPC,OAAQ,QACLzK,EAAMQ,MAAK,GAEhB,CAACR,EAAMQ,QAOT,OACErB,EAAAA,cAAA,OAAKiC,GAAIpB,EAAMoB,GAAIU,IAAKuQ,EAAc7R,MAAOA,GAC1CyP,GACC9Q,EAAAA,cAACwS,EAAW4C,SAAQ,CAACpT,MAAOoR,GAC1BpT,EAAAA,cAAA,2BAAuB,GAAGqB,MARJ,CAC5BiK,OAAQ,SAQCzK,EAAM0K,WAMnB,C,cC7IM8J,EAAiB,0EAEjB,SAAUC,EAAgBC,EAAsBC,GACpD,GAAKD,GAAYC,EAAjB,CAGA,IAAMnU,EAAQkU,EAAQlU,MAEtB,IAAK,IAAMuC,KAAO4R,EAAQ,CACxB,IAAMxT,EAAQwT,EAAO5R,GACjB6R,OAAOC,SAAS1T,KAAWqT,EAAeM,KAAK/R,GACjDvC,EAAMuC,GAAO,GAAH+I,OAAM3K,EAAK,MAErBX,EAAMuC,GAAO5B,C,EAGnB,ECqHe4T,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,aArGpB,SACEhV,EACA8B,GAEA,IAAAmT,GAAsBlD,EAAAA,EAAAA,YAAWJ,GAA1BnQ,EAAGyT,EAAHzT,IAAKgR,EAAMyC,EAANzC,OACN0C,GAAU5C,EAAAA,EAAAA,QAAO,CAACtS,MAAAA,IACxBkV,EAAQzC,QAAQzS,MAAQA,EAExB,IAAMmV,GAAkBd,EAAAA,EAAAA,UAAQ,WAC9B,IAAIe,GAAc,EAClBjW,EAAAA,SAAekW,QAAQrV,EAAM0K,UAAU,SAAA4K,GACjCA,IACFF,GAAc,EAElB,IACA,IAAMhJ,GAAOlK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRlC,GAAK,IACR0U,QAASU,EAAc7D,SAASgE,cAAc,OAAS,OAGnDC,EAAK,IAAIhD,EAAOiD,OAAOrJ,GA2B7B,OA1BAoJ,EAAGE,UAAU,CAAC1V,EAAMV,UAAWU,EAAMP,WAErC+V,EAAGG,aAAaC,iBAAiB,SAAS,SAACtU,G,QACZ,QAA7B+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAM6V,eAAO,IAAAxI,GAAAA,EAAA1D,KAAAyD,EAAG,CAC9BvG,KAAM,QACNiN,OAAQ0B,EACRzB,cAAezS,GAEnB,IAEAkU,EAAGxL,GAAG,aAAa,SAAA1I,G,QACXwU,EAAMxU,EACZwU,EAAIC,OAASZ,EAAOa,YACa,QAAjC3I,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMiW,mBAAW,IAAA5I,GAAAA,EAAA1D,KAAAyD,EAAG0I,EACtC,IACAN,EAAGxL,GAAG,QAAQ,SAAA1I,G,QACNwU,EAAMxU,EACZwU,EAAIC,OAASZ,EAAOa,YACQ,QAA5B3I,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMkW,cAAM,IAAA7I,GAAAA,EAAA1D,KAAAyD,EAAG0I,EACjC,IACAN,EAAGxL,GAAG,WAAW,SAAA1I,G,QACTwU,EAAMxU,EACZwU,EAAIC,OAASZ,EAAOa,YACW,QAA/B3I,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMmW,iBAAS,IAAA9I,GAAAA,EAAA1D,KAAAyD,EAAG0I,EACpC,IAEON,CACT,GAAG,KAEH/D,EAAAA,EAAAA,YAAU,WAGR,OAFA0D,EAAOiB,MAAM5U,EAAI2O,UAEV,WACLgF,EAAOzP,QACT,CACF,GAAG,IAEH,IACEpG,EASEU,EATFV,UACAG,EAQEO,EARFP,SACA4W,EAOErW,EAPFqW,OACA7V,EAMER,EANFQ,MAAK8V,EAMHtW,EALFuW,UAAAA,OAAS,IAAAD,GAAQA,EAAAE,EAKfxW,EAJFyW,MAAAA,OAAK,IAAAD,EAAG,KAAIA,EAAAE,EAIV1W,EAHF2W,SAAAA,OAAQ,IAAAD,EAAG,EAACA,EAAAE,EAGV5W,EAFF6W,kBAAAA,OAAiB,IAAAD,EAAG,OAAMA,EAAAE,EAExB9W,EADF+W,eAAAA,OAAc,IAAAD,EAAG,OAAMA,EA+BzB,OA5BArF,EAAAA,EAAAA,YAAU,WACRgD,EAAgBU,EAAOQ,aAAcnV,EACvC,GAAG,CAACA,KAEJ4T,EAAAA,EAAAA,qBAAoBtS,GAAK,kBAAMqT,CAAM,GAAE,IAEnCA,EAAOa,YAAYxW,MAAQF,GAAa6V,EAAOa,YAAYtW,MAAQD,GACrE0V,EAAOO,UAAU,CAACpW,EAAWG,IAE3B4W,IP1GA,SAAyBjU,EAAeC,GAC5C,IAAM2U,EAAK1U,MAAMC,QAAQH,GAAKA,EAAE,GAAKA,EAAIA,EAAE6U,EAAI,EACzCC,EAAK5U,MAAMC,QAAQH,GAAKA,EAAE,GAAKA,EAAIA,EAAE+U,EAAI,EACzCC,EAAK9U,MAAMC,QAAQF,GAAKA,EAAE,GAAKA,EAAIA,EAAE4U,EAAI,EACzCI,EAAK/U,MAAMC,QAAQF,GAAKA,EAAE,GAAKA,EAAIA,EAAE8U,EAAI,EAC/C,OAAOH,IAAOI,GAAMF,IAAOG,CAC7B,COoGiBC,CAAenC,EAAOoC,YAAalB,IAChDlB,EAAOqC,UAAUnB,GAEflB,EAAOsC,gBAAkBlB,GAC3BpB,EAAOuC,aAAanB,GAElBpB,EAAOwC,gBAAkBhB,GAC3BxB,EAAOyC,YAAYjB,GAEjBxB,EAAO0C,yBAA2BhB,GACpC1B,EAAO2C,qBAAqBjB,GAE1B1B,EAAO4C,sBAAwBhB,GACjC5B,EAAO6C,kBAAkBjB,GAEvB5B,EAAO8C,aAAexB,GACxBtB,EAAO+C,SAASzB,IAGX0B,EAAAA,EAAAA,cAAanY,EAAM0K,SAAUyK,EAAOQ,aAC7C,KCtGA,SAASyC,EAAa3J,GACpB,OAAO,IAAIsC,IAAItC,EAAYA,EAAU4J,OAAOC,MAAM,OAAS,GAC7D,EAiFevD,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,aA9EpB,SACEhV,EACA8B,GAEA,IAAAmT,GAAsBlD,EAAAA,EAAAA,YAAWJ,GAA1BnQ,EAAGyT,EAAHzT,IAAKgR,EAAMyC,EAANzC,OACNrM,GAAYkO,EAAAA,EAAAA,UAAQ,WACxB,OAAO9C,SAASgE,cAAc,MAChC,GAAG,IACGL,GAAU5C,EAAAA,EAAAA,QAAO,CAACtS,MAAAA,IACxBkV,EAAQzC,QAAQzS,MAAQA,EAExB,IAAMyW,GAAgBpC,EAAAA,EAAAA,UAAQ,WAC5B,IAAMjI,GAAOlK,EAAAA,EAAAA,GAAA,GAAOlC,GACduY,EAAK,IAAI/F,EAAOgG,MAAMpM,GAK5B,OAJAmM,EAAG7C,UAAU,CAAC1V,EAAMV,UAAWU,EAAMP,WACrC8Y,EAAGjJ,KAAK,QAAQ,SAAAhO,G,QACc,QAA5B+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMyY,cAAM,IAAApL,GAAAA,EAAA1D,KAAAyD,EAAG9L,EACjC,IACOiX,CACT,GAAG,IA2BH,IAzBA9G,EAAAA,EAAAA,YAAU,WACR,IAAMiH,EAAU,SAAApX,G,QACe,QAA7B+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAM0Y,eAAO,IAAArL,GAAAA,EAAA1D,KAAAyD,EAAG9L,EAClC,EAIA,OAHAmV,EAAMzM,GAAG,QAAS0O,GAClBjC,EAAMkC,cAAcxS,GAAWiQ,MAAM5U,EAAI2O,UAElC,WAKLsG,EAAMmC,IAAI,QAASF,GACfjC,EAAMoC,UACRpC,EAAM/Q,QAEV,CACF,GAAG,KAEH+L,EAAAA,EAAAA,YAAU,WACRgD,EAAgBgC,EAAMd,aAAc3V,EAAMQ,MAC5C,GAAG,CAACR,EAAMQ,SAEV4T,EAAAA,EAAAA,qBAAoBtS,GAAK,kBAAM2U,CAAK,GAAE,IAElCA,EAAMoC,WACJpC,EAAMT,YAAYxW,MAAQQ,EAAMV,WAAamX,EAAMT,YAAYtW,MAAQM,EAAMP,UAC/EgX,EAAMf,UAAU,CAAC1V,EAAMV,UAAWU,EAAMP,WAEtCO,EAAMqW,SAAWlU,EAAUsU,EAAMrK,QAAQiK,OAAQrW,EAAMqW,SACzDI,EAAMe,UAAUxX,EAAMqW,QAEpBI,EAAMrK,QAAQ0M,SAAW9Y,EAAM8Y,QAAUrC,EAAMrK,QAAQ2M,WAAa/Y,EAAM+Y,WAC5EtC,EAAMrK,QAAQ0M,OAAS9Y,EAAM8Y,OAC7BrC,EAAMuC,YAAYhZ,EAAM+Y,WAEtBtC,EAAMrK,QAAQqC,YAAczO,EAAMyO,WAAW,CAC/C,IAG6B9N,EAHvBsY,EAAgBb,EAAa3B,EAAMrK,QAAQqC,WAC3CyK,EAAgBd,EAAapY,EAAMyO,WAAW5N,GAAAC,EAAAA,EAAAA,GAEpCmY,GAAa,IAA7B,IAAApY,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAC,MAA+B,KAApBkY,EAACxY,EAAAQ,MACL+X,EAAcE,IAAID,IACrB1C,EAAM4C,gBAAgBF,E,CAEzB,OAAA9X,GAAAR,EAAAS,EAAAD,EAAA,SAAAR,EAAAU,GAAA,KAC4BQ,EAD5BC,GAAAlB,EAAAA,EAAAA,GACeoY,GAAa,IAA7B,IAAAlX,EAAAjB,MAAAgB,EAAAC,EAAAhB,KAAAC,MAA+B,KAApBkY,EAACpX,EAAAZ,MACL8X,EAAcG,IAAID,IACrB1C,EAAM6C,aAAaH,E,CAEtB,OAAA9X,GAAAW,EAAAV,EAAAD,EAAA,SAAAW,EAAAT,GAAA,CACDkV,EAAMrK,QAAQqC,UAAYzO,EAAMyO,S,CAIpC,OAAO0J,EAAAA,EAAAA,cAAanY,EAAM0K,SAAUvE,EACtC,KClDA,MApCA,SACEoT,EACAC,EACAC,EACAC,GAEA,IAAMC,GAAU5H,EAAAA,EAAAA,YAAWJ,GACrBiI,GAAOvF,EAAAA,EAAAA,UAAQ,kBAAMkF,EAASI,EAAQ,GAAE,IA0B9C,OAxBAlI,EAAAA,EAAAA,YAAU,WACR,IAAMoI,EAAQH,GAAQD,GAAQD,EACxBM,EAAwB,oBAATN,GAAuC,oBAATC,EAAsBD,EAAO,KAC1EO,EAA2B,oBAATN,EAAsBA,EAAuB,oBAATD,EAAsBA,EAAO,KAElFhY,EAAOmY,EAAPnY,IAQP,OAPKA,EAAIwY,WAAWJ,KAClBpY,EAAIyY,WAAWL,EAAU,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAMvF,UACvBwF,GACFA,EAAMH,IAIH,WACDI,GACFA,EAASJ,GAGPnY,EAAIwY,WAAWJ,IACjBpY,EAAI0Y,cAAcN,EAEtB,CACF,GAAG,IAEIA,CACT,GC9Be7E,EAAAA,EAAAA,OAjBf,SACE/U,GAEA,IAAM4Z,EAAOO,GACX,SAAAC,GAAQ,OAAM,IAANA,EAAN5H,OAAuB6H,mBAAmBra,EAAkB,GAC9D,CACEsU,SAAUtU,EAAMsU,WAQpB,OAJA7C,EAAAA,EAAAA,YAAU,WACRgD,EAAgBmF,EAAKhL,WAAY5O,EAAMQ,MACzC,GAAG,CAACR,EAAMQ,QAEH,IACT,KCOeuU,EAAAA,EAAAA,OAlBf,SACE/U,GAEA,IAAM4Z,EAAOO,GACX,SAAAC,GAAQ,OACN,IADMA,EAAN5H,OACW8H,kBAAkB,CAC3BnU,UAAWnG,EAAMua,aAAehJ,SAASiJ,eAAexa,EAAMua,cAClD,GAChB,CAACjG,SAAUtU,EAAMsU,WAOnB,OAJA7C,EAAAA,EAAAA,YAAU,WACRgD,EAAgBmF,EAAKa,kBAAmBza,EAAMQ,MAChD,GAAG,CAACR,EAAMQ,QAEH,IACT,KCuDeuU,EAAAA,EAAAA,OAAKC,EAAAA,EAAAA,aAtDpB,SACEhV,EACA8B,GAEA,IAAMoT,GAAU5C,EAAAA,EAAAA,QAAO,CAACtS,MAAAA,IAElB4Z,EAAOO,GACX,SAAAC,GAAa,IACLM,EAAK,IADLN,EAAN5H,OACsBmI,iBAAiB3a,GAMjC4a,EAAUF,EAAGG,SAwBnB,OAtBAH,EAAGG,SAAW,SAAAC,GACPJ,EAAG9L,WAAWmM,iBACjBH,EAAQE,EAEZ,EAEAJ,EAAG1Q,GAAG,aAAa,SAAA1I,G,QACgB,QAAjC+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMgb,mBAAW,IAAA3N,GAAAA,EAAA1D,KAAAyD,EAAG9L,EACtC,IACAoZ,EAAG1Q,GAAG,SAAS,SAAA1I,G,QACgB,QAA7B+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAM6T,eAAO,IAAAxG,GAAAA,EAAA1D,KAAAyD,EAAG9L,EAClC,IACAoZ,EAAG1Q,GAAG,kBAAkB,SAAA1I,G,QACgB,QAAtC+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMib,wBAAgB,IAAA5N,GAAAA,EAAA1D,KAAAyD,EAAG9L,EAC3C,IACAoZ,EAAG1Q,GAAG,0BAA0B,SAAA1I,G,QACgB,QAA9C+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMkb,gCAAwB,IAAA7N,GAAAA,EAAA1D,KAAAyD,EAAG9L,EACnD,IACAoZ,EAAG1Q,GAAG,wBAAwB,SAAA1I,G,QACgB,QAA5C+L,GAAAD,EAAA8H,EAAQzC,QAAQzS,OAAMmb,8BAAsB,IAAA9N,GAAAA,EAAA1D,KAAAyD,EAAG9L,EACjD,IAEOoZ,CACT,GACA,CAACpG,SAAUtU,EAAMsU,WAWnB,OARAY,EAAQzC,QAAQzS,MAAQA,GAExBoU,EAAAA,EAAAA,qBAAoBtS,GAAK,kBAAM8X,CAAI,GAAE,KAErCnI,EAAAA,EAAAA,YAAU,WACRgD,EAAgBmF,EAAKhL,WAAY5O,EAAMQ,MACzC,GAAG,CAACR,EAAMQ,QAEH,IACT,MC3DeuU,EAAAA,EAAAA,OAdf,SACE/U,GAEA,IAAM4Z,EAAOO,GAAqB,SAAAC,GAAQ,OAAM,IAANA,EAAN5H,OAAuB4I,kBAAkBpb,EAAkB,GAAE,CAC/FsU,SAAUtU,EAAMsU,WAOlB,OAJA7C,EAAAA,EAAAA,YAAU,WACRgD,EAAgBmF,EAAKhL,WAAY5O,EAAMQ,MACzC,GAAG,CAACR,EAAMQ,QAEH,IACT,KCmBeuU,EAAAA,EAAAA,OA3Bf,SACE/U,GAEA,IAAM4Z,EAAOO,GAAqB,SAAAC,GAAQ,OAAM,IAANA,EAAN5H,OAAuB6I,aAAarb,EAAkB,GAAE,CAC1FsU,SAAUtU,EAAMsU,WAEZgH,GAAWhJ,EAAAA,EAAAA,QAA+CtS,GAE1Dub,EAAYD,EAAS7I,QAC3B6I,EAAS7I,QAAUzS,EAEnB,IAAOQ,EAASR,EAATQ,MAaP,YAXuBgb,IAAnBxb,EAAM+Y,UAA0B/Y,EAAM+Y,WAAawC,EAAUxC,WAC/Da,EAAKxN,QAAQ2M,SAAW/Y,EAAM+Y,eAEbyC,IAAfxb,EAAMyb,MAAsBzb,EAAMyb,OAASF,EAAUE,MACvD7B,EAAK8B,QAAQ1b,EAAMyb,OAGrBhK,EAAAA,EAAAA,YAAU,WACRgD,EAAgBmF,EAAKhL,WAAYpO,EACnC,GAAG,CAACA,IAEG,IACT,ICKA,IAAMgS,EAAS,4CAuDf,EArDSrT,EAAAA,YAAiB,SAAaa,EAAiB8B,GACpD,OAAO6Z,EAAK3b,EAAO8B,EAAK0Q,EAC1B,G,uBCpDa,SAASnM,EAAgBuV,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,oCAExB,C,oGCHA,SAASC,EAAkBjI,EAAQ9T,GACjC,IAAK,IAAIyC,EAAI,EAAGA,EAAIzC,EAAMwC,OAAQC,IAAK,CACrC,IAAIuZ,EAAahc,EAAMyC,GACvBuZ,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWE,cAAe,EACtB,UAAWF,IAAYA,EAAWG,UAAW,GACjDza,OAAO0a,eAAetI,GAAQ,OAAckI,EAAWjZ,KAAMiZ,EAC/D,CACF,CACe,SAASvU,EAAaoU,EAAaQ,EAAYC,GAM5D,OALID,GAAYN,EAAkBF,EAAYzS,UAAWiT,GACrDC,GAAaP,EAAkBF,EAAaS,GAChD5a,OAAO0a,eAAeP,EAAa,YAAa,CAC9CM,UAAU,IAELN,CACT,C,oEChBe,SAAS/a,EAA2Byb,EAAGC,GACpD,IAAIC,EAAuB,qBAAXC,QAA0BH,EAAEG,OAAOC,WAAaJ,EAAE,cAClE,IAAKE,EAAI,CACP,GAAIna,MAAMC,QAAQga,KAAOE,GAAK,OAA2BF,KAAOC,GAAkBD,GAAyB,kBAAbA,EAAE/Z,OAAqB,CAC/Gia,IAAIF,EAAIE,GACZ,IAAIha,EAAI,EACJma,EAAI,WAAc,EACtB,MAAO,CACL7b,EAAG6b,EACH5b,EAAG,WACD,OAAIyB,GAAK8Z,EAAE/Z,OAAe,CACxBvB,MAAM,GAED,CACLA,MAAM,EACNE,MAAOob,EAAE9Z,KAEb,EACAnB,EAAG,SAAWub,GACZ,MAAMA,CACR,EACAtb,EAAGqb,EAEP,CACA,MAAM,IAAId,UAAU,wIACtB,CACA,IAEEza,EAFEyb,GAAmB,EACrBC,GAAS,EAEX,MAAO,CACLhc,EAAG,WACD0b,EAAKA,EAAG9S,KAAK4S,EACf,EACAvb,EAAG,WACD,IAAIgc,EAAOP,EAAGQ,OAEd,OADAH,EAAmBE,EAAK/b,KACjB+b,CACT,EACA1b,EAAG,SAAW4b,GACZH,GAAS,EACT1b,EAAM6b,CACR,EACA3b,EAAG,WACD,IACOub,GAAoC,MAAhBL,EAAW,QAAWA,EAAW,QAC5D,CAAE,QACA,GAAIM,EAAQ,MAAM1b,CACpB,CACF,EAEJ,C","sources":["../node_modules/react-map-gl/src/components/use-map.tsx","../node_modules/react-map-gl/src/utils/transform.ts","../node_modules/react-map-gl/src/utils/style-utils.ts","../node_modules/react-map-gl/src/utils/deep-equal.ts","../node_modules/react-map-gl/src/mapbox/mapbox.ts","../node_modules/react-map-gl/src/mapbox/create-ref.ts","../node_modules/react-map-gl/src/utils/use-isomorphic-layout-effect.ts","../node_modules/react-map-gl/src/utils/set-globals.ts","../node_modules/react-map-gl/src/components/map.tsx","../node_modules/react-map-gl/src/utils/apply-react-style.ts","../node_modules/react-map-gl/src/components/marker.ts","../node_modules/react-map-gl/src/components/popup.ts","../node_modules/react-map-gl/src/components/use-control.ts","../node_modules/react-map-gl/src/components/attribution-control.ts","../node_modules/react-map-gl/src/components/fullscreen-control.tsx","../node_modules/react-map-gl/src/components/geolocate-control.ts","../node_modules/react-map-gl/src/components/navigation-control.ts","../node_modules/react-map-gl/src/components/scale-control.ts","../node_modules/react-map-gl/src/exports-mapbox.ts","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import * as React from 'react';\nimport {useState, useCallback, useMemo, useContext} from 'react';\n\nimport {MapRef} from '../mapbox/create-ref';\nimport {MapContext} from './map';\nimport {MapInstance} from '../types';\n\ntype MountedMapsContextValue = {\n  maps: {[id: string]: MapRef<MapInstance>};\n  onMapMount: (map: MapRef<MapInstance>, id: string) => void;\n  onMapUnmount: (id: string) => void;\n};\n\nexport const MountedMapsContext = React.createContext<MountedMapsContextValue>(null);\n\nexport const MapProvider: React.FC<{children?: React.ReactNode}> = props => {\n  const [maps, setMaps] = useState<{[id: string]: MapRef<MapInstance>}>({});\n\n  const onMapMount = useCallback((map: MapRef<MapInstance>, id: string = 'default') => {\n    setMaps(currMaps => {\n      if (id === 'current') {\n        throw new Error(\"'current' cannot be used as map id\");\n      }\n      if (currMaps[id]) {\n        throw new Error(`Multiple maps with the same id: ${id}`);\n      }\n      return {...currMaps, [id]: map};\n    });\n  }, []);\n\n  const onMapUnmount = useCallback((id: string = 'default') => {\n    setMaps(currMaps => {\n      if (currMaps[id]) {\n        const nextMaps = {...currMaps};\n        delete nextMaps[id];\n        return nextMaps;\n      }\n      return currMaps;\n    });\n  }, []);\n\n  return (\n    <MountedMapsContext.Provider\n      value={{\n        maps,\n        onMapMount,\n        onMapUnmount\n      }}\n    >\n      {props.children}\n    </MountedMapsContext.Provider>\n  );\n};\n\nexport function useMap<MapT extends MapInstance>() {\n  const maps = useContext(MountedMapsContext)?.maps;\n  const currentMap = useContext(MapContext);\n\n  const mapsWithCurrent = useMemo(() => {\n    return {...maps, current: currentMap?.map};\n  }, [maps, currentMap]);\n\n  return mapsWithCurrent as {current?: MapRef<MapT>; [id: string]: MapRef<MapT> | undefined};\n}\n","import type {MapboxProps} from '../mapbox/mapbox';\nimport type {Transform, ViewState} from '../types';\n\n/**\n * Make a copy of a transform\n * @param tr\n */\nexport function cloneTransform(tr: Transform): Transform {\n  const newTransform = tr.clone();\n  // Work around mapbox bug - this value is not assigned in clone(), only in resize()\n  newTransform.pixelsToGLUnits = tr.pixelsToGLUnits;\n  return newTransform;\n}\n\n/**\n * Capture a transform's current state\n * @param transform\n * @returns descriptor of the view state\n */\nexport function transformToViewState(tr: Transform): ViewState {\n  return {\n    longitude: tr.center.lng,\n    latitude: tr.center.lat,\n    zoom: tr.zoom,\n    pitch: tr.pitch,\n    bearing: tr.bearing,\n    padding: tr.padding\n  };\n}\n\n/* eslint-disable complexity */\n/**\n * Mutate a transform to match the given view state\n * @param transform\n * @param viewState\n * @returns true if the transform has changed\n */\nexport function applyViewStateToTransform(tr: Transform, props: MapboxProps): boolean {\n  const v: Partial<ViewState> = props.viewState || props;\n  let changed = false;\n\n  if ('longitude' in v && 'latitude' in v) {\n    const center = tr.center;\n    // @ts-ignore\n    tr.center = new center.constructor(v.longitude, v.latitude);\n    changed = changed || center !== tr.center;\n  }\n  if ('zoom' in v) {\n    const zoom = tr.zoom;\n    tr.zoom = v.zoom;\n    changed = changed || zoom !== tr.zoom;\n  }\n  if ('bearing' in v) {\n    const bearing = tr.bearing;\n    tr.bearing = v.bearing;\n    changed = changed || bearing !== tr.bearing;\n  }\n  if ('pitch' in v) {\n    const pitch = tr.pitch;\n    tr.pitch = v.pitch;\n    changed = changed || pitch !== tr.pitch;\n  }\n  if (v.padding && !tr.isPaddingEqual(v.padding)) {\n    changed = true;\n    tr.padding = v.padding;\n  }\n  return changed;\n}\n","import {ImmutableLike, MapboxStyle} from '../types';\n\nconst refProps = ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n\n// Prepare a map style object for diffing\n// If immutable - convert to plain object\n// Work around some issues in older styles that would fail Mapbox's diffing\nexport function normalizeStyle(\n  style: string | MapboxStyle | ImmutableLike<MapboxStyle>\n): string | MapboxStyle {\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'string') {\n    return style;\n  }\n  if ('toJS' in style) {\n    style = style.toJS();\n  }\n  if (!style.layers) {\n    return style;\n  }\n  const layerIndex = {};\n\n  for (const layer of style.layers) {\n    layerIndex[layer.id] = layer;\n  }\n\n  const layers = style.layers.map(layer => {\n    let normalizedLayer: typeof layer = null;\n\n    if ('interactive' in layer) {\n      normalizedLayer = Object.assign({}, layer);\n      // Breaks style diffing :(\n      // @ts-ignore legacy field not typed\n      delete normalizedLayer.interactive;\n    }\n\n    // Style diffing doesn't work with refs so expand them out manually before diffing.\n    // @ts-ignore legacy field not typed\n    const layerRef = layerIndex[layer.ref];\n    if (layerRef) {\n      normalizedLayer = normalizedLayer || Object.assign({}, layer);\n      // @ts-ignore\n      delete normalizedLayer.ref;\n      // https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/deref.js\n      for (const propName of refProps) {\n        if (propName in layerRef) {\n          normalizedLayer[propName] = layerRef[propName];\n        }\n      }\n    }\n\n    return normalizedLayer || layer;\n  });\n\n  // Do not mutate the style object provided by the user\n  return {...style, layers};\n}\n","import type {PointLike} from '../types';\n\n/**\n * Compare two points\n * @param a\n * @param b\n * @returns true if the points are equal\n */\nexport function arePointsEqual(a?: PointLike, b?: PointLike): boolean {\n  const ax = Array.isArray(a) ? a[0] : a ? a.x : 0;\n  const ay = Array.isArray(a) ? a[1] : a ? a.y : 0;\n  const bx = Array.isArray(b) ? b[0] : b ? b.x : 0;\n  const by = Array.isArray(b) ? b[1] : b ? b.y : 0;\n  return ax === bx && ay === by;\n}\n\n/* eslint-disable complexity */\n/**\n * Compare any two objects\n * @param a\n * @param b\n * @returns true if the objects are deep equal\n */\nexport function deepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b) || a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (!deepEqual(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  } else if (Array.isArray(b)) {\n    return false;\n  }\n  if (typeof a === 'object' && typeof b === 'object') {\n    const aKeys = Object.keys(a);\n    const bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    for (const key of aKeys) {\n      if (!b.hasOwnProperty(key)) {\n        return false;\n      }\n      if (!deepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n","import {transformToViewState, applyViewStateToTransform, cloneTransform} from '../utils/transform';\nimport {normalizeStyle} from '../utils/style-utils';\nimport {deepEqual} from '../utils/deep-equal';\n\nimport type {\n  Transform,\n  ViewState,\n  ViewStateChangeEvent,\n  Point,\n  PointLike,\n  PaddingOptions,\n  Light,\n  Fog,\n  Terrain,\n  MapboxStyle,\n  ImmutableLike,\n  LngLatBoundsLike,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapLayerTouchEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapEvent,\n  ErrorEvent,\n  MapGeoJSONFeature,\n  MapInstance,\n  MapInstanceInternal\n} from '../types';\n\nexport type MapboxProps<MapT extends MapInstance = MapInstance> = Partial<ViewState> & {\n  // Init options\n  mapboxAccessToken?: string;\n\n  /** Camera options used when constructing the Map instance */\n  initialViewState?: Partial<ViewState> & {\n    /** The initial bounds of the map. If bounds is specified, it overrides longitude, latitude and zoom options. */\n    bounds?: LngLatBoundsLike;\n    /** A fitBounds options object to use only when setting the bounds option. */\n    fitBoundsOptions?: {\n      offset?: PointLike;\n      minZoom?: number;\n      maxZoom?: number;\n      padding?: number | PaddingOptions;\n    };\n  };\n\n  /** If provided, render into an external WebGL context */\n  gl?: WebGLRenderingContext;\n\n  /** For external controller to override the camera state */\n  viewState?: ViewState & {\n    width: number;\n    height: number;\n  };\n\n  // Styling\n\n  /** Mapbox style */\n  mapStyle?: string | MapboxStyle | ImmutableLike<MapboxStyle>;\n  /** Enable diffing when the map style changes\n   * @default true\n   */\n  styleDiffing?: boolean;\n  /** The fog property of the style. Must conform to the Fog Style Specification .\n   * If `undefined` is provided, removes the fog from the map. */\n  fog?: Fog;\n  /** Light properties of the map. */\n  light?: Light;\n  /** Terrain property of the style. Must conform to the Terrain Style Specification .\n   * If `undefined` is provided, removes terrain from the map. */\n  terrain?: Terrain;\n\n  /** Default layers to query on pointer events */\n  interactiveLayerIds?: string[];\n  /** CSS cursor */\n  cursor?: string;\n\n  // Callbacks\n  onMouseDown?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseUp?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseOver?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseMove?: (e: MapLayerMouseEvent<MapT>) => void;\n  onClick?: (e: MapLayerMouseEvent<MapT>) => void;\n  onDblClick?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseEnter?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseLeave?: (e: MapLayerMouseEvent<MapT>) => void;\n  onMouseOut?: (e: MapLayerMouseEvent<MapT>) => void;\n  onContextMenu?: (e: MapLayerMouseEvent<MapT>) => void;\n  onTouchStart?: (e: MapLayerTouchEvent<MapT>) => void;\n  onTouchEnd?: (e: MapLayerTouchEvent<MapT>) => void;\n  onTouchMove?: (e: MapLayerTouchEvent<MapT>) => void;\n  onTouchCancel?: (e: MapLayerTouchEvent<MapT>) => void;\n\n  onMoveStart?: (e: ViewStateChangeEvent<MapT>) => void;\n  onMove?: (e: ViewStateChangeEvent<MapT>) => void;\n  onMoveEnd?: (e: ViewStateChangeEvent<MapT>) => void;\n  onDragStart?: (e: ViewStateChangeEvent<MapT>) => void;\n  onDrag?: (e: ViewStateChangeEvent<MapT>) => void;\n  onDragEnd?: (e: ViewStateChangeEvent<MapT>) => void;\n  onZoomStart?: (e: ViewStateChangeEvent<MapT>) => void;\n  onZoom?: (e: ViewStateChangeEvent<MapT>) => void;\n  onZoomEnd?: (e: ViewStateChangeEvent<MapT>) => void;\n  onRotateStart?: (e: ViewStateChangeEvent<MapT>) => void;\n  onRotate?: (e: ViewStateChangeEvent<MapT>) => void;\n  onRotateEnd?: (e: ViewStateChangeEvent<MapT>) => void;\n  onPitchStart?: (e: ViewStateChangeEvent<MapT>) => void;\n  onPitch?: (e: ViewStateChangeEvent<MapT>) => void;\n  onPitchEnd?: (e: ViewStateChangeEvent<MapT>) => void;\n\n  onWheel?: (e: MapWheelEvent<MapT>) => void;\n  onBoxZoomStart?: (e: MapBoxZoomEvent<MapT>) => void;\n  onBoxZoomEnd?: (e: MapBoxZoomEvent<MapT>) => void;\n  onBoxZoomCancel?: (e: MapBoxZoomEvent<MapT>) => void;\n\n  onResize?: (e: MapEvent<MapT>) => void;\n  onLoad?: (e: MapEvent<MapT>) => void;\n  onRender?: (e: MapEvent<MapT>) => void;\n  onIdle?: (e: MapEvent<MapT>) => void;\n  onError?: (e: ErrorEvent<MapT>) => void;\n  onRemove?: (e: MapEvent<MapT>) => void;\n  onData?: (e: MapStyleDataEvent<MapT> | MapSourceDataEvent<MapT>) => void;\n  onStyleData?: (e: MapStyleDataEvent<MapT>) => void;\n  onSourceData?: (e: MapSourceDataEvent<MapT>) => void;\n};\n\nconst DEFAULT_STYLE = {version: 8, sources: {}, layers: []} as MapboxStyle;\n\nconst pointerEvents = {\n  mousedown: 'onMouseDown',\n  mouseup: 'onMouseUp',\n  mouseover: 'onMouseOver',\n  mousemove: 'onMouseMove',\n  click: 'onClick',\n  dblclick: 'onDblClick',\n  mouseenter: 'onMouseEnter',\n  mouseleave: 'onMouseLeave',\n  mouseout: 'onMouseOut',\n  contextmenu: 'onContextMenu',\n  touchstart: 'onTouchStart',\n  touchend: 'onTouchEnd',\n  touchmove: 'onTouchMove',\n  touchcancel: 'onTouchCancel'\n};\nconst cameraEvents = {\n  movestart: 'onMoveStart',\n  move: 'onMove',\n  moveend: 'onMoveEnd',\n  dragstart: 'onDragStart',\n  drag: 'onDrag',\n  dragend: 'onDragEnd',\n  zoomstart: 'onZoomStart',\n  zoom: 'onZoom',\n  zoomend: 'onZoomEnd',\n  rotatestart: 'onRotateStart',\n  rotate: 'onRotate',\n  rotateend: 'onRotateEnd',\n  pitchstart: 'onPitchStart',\n  pitch: 'onPitch',\n  pitchend: 'onPitchEnd'\n};\nconst otherEvents = {\n  wheel: 'onWheel',\n  boxzoomstart: 'onBoxZoomStart',\n  boxzoomend: 'onBoxZoomEnd',\n  boxzoomcancel: 'onBoxZoomCancel',\n  resize: 'onResize',\n  load: 'onLoad',\n  render: 'onRender',\n  idle: 'onIdle',\n  remove: 'onRemove',\n  data: 'onData',\n  styledata: 'onStyleData',\n  sourcedata: 'onSourceData',\n  error: 'onError'\n};\nconst settingNames = [\n  'minZoom',\n  'maxZoom',\n  'minPitch',\n  'maxPitch',\n  'maxBounds',\n  'projection',\n  'renderWorldCopies'\n];\nconst handlerNames = [\n  'scrollZoom',\n  'boxZoom',\n  'dragRotate',\n  'dragPan',\n  'keyboard',\n  'doubleClickZoom',\n  'touchZoomRotate',\n  'touchPitch'\n];\n\n/**\n * A wrapper for mapbox-gl's Map class\n */\nexport default class Mapbox<MapT extends MapInstance = MapInstance> {\n  private _MapClass: {new (options: any): MapInstance};\n  // mapboxgl.Map instance\n  private _map: MapInstanceInternal<MapT> = null;\n  // User-supplied props\n  props: MapboxProps<MapT>;\n\n  // Mapbox map is stateful.\n  // During method calls/user interactions, map.transform is mutated and\n  // deviate from user-supplied props.\n  // In order to control the map reactively, we shadow the transform\n  // with the one below, which reflects the view state resolved from\n  // both user-supplied props and the underlying state\n  private _renderTransform: Transform;\n\n  // Internal states\n  private _internalUpdate: boolean = false;\n  private _inRender: boolean = false;\n  private _hoveredFeatures: MapGeoJSONFeature[] = null;\n  private _deferredEvents: {\n    move: boolean;\n    zoom: boolean;\n    pitch: boolean;\n    rotate: boolean;\n  } = {\n    move: false,\n    zoom: false,\n    pitch: false,\n    rotate: false\n  };\n\n  static savedMaps: Mapbox[] = [];\n\n  constructor(\n    MapClass: {new (options: any): MapInstance},\n    props: MapboxProps<MapT>,\n    container: HTMLDivElement\n  ) {\n    this._MapClass = MapClass;\n    this.props = props;\n    this._initialize(container);\n  }\n\n  get map(): MapT {\n    return this._map;\n  }\n\n  get transform(): Transform {\n    return this._renderTransform;\n  }\n\n  setProps(props: MapboxProps<MapT>) {\n    const oldProps = this.props;\n    this.props = props;\n\n    const settingsChanged = this._updateSettings(props, oldProps);\n    if (settingsChanged) {\n      this._createShadowTransform(this._map);\n    }\n    const sizeChanged = this._updateSize(props);\n    const viewStateChanged = this._updateViewState(props, true);\n    this._updateStyle(props, oldProps);\n    this._updateStyleComponents(props, oldProps);\n    this._updateHandlers(props, oldProps);\n\n    // If 1) view state has changed to match props and\n    //    2) the props change is not triggered by map events,\n    // it's driven by an external state change. Redraw immediately\n    if (settingsChanged || sizeChanged || (viewStateChanged && !this._map.isMoving())) {\n      this.redraw();\n    }\n  }\n\n  static reuse<MapT extends MapInstance>(\n    props: MapboxProps<MapT>,\n    container: HTMLDivElement\n  ): Mapbox<MapT> {\n    const that = Mapbox.savedMaps.pop() as Mapbox<MapT>;\n    if (!that) {\n      return null;\n    }\n\n    const map = that.map;\n    // When reusing the saved map, we need to reparent the map(canvas) and other child nodes\n    // intoto the new container from the props.\n    // Step 1: reparenting child nodes from old container to new container\n    const oldContainer = map.getContainer();\n    container.className = oldContainer.className;\n    while (oldContainer.childNodes.length > 0) {\n      container.appendChild(oldContainer.childNodes[0]);\n    }\n    // Step 2: replace the internal container with new container from the react component\n    // @ts-ignore\n    map._container = container;\n\n    // With maplibre-gl as mapLib, map uses ResizeObserver to observe when its container resizes.\n    // When reusing the saved map, we need to disconnect the observer and observe the new container.\n    // Step 3: telling the ResizeObserver to disconnect and observe the new container\n    // @ts-ignore\n    const resizeObserver = map._resizeObserver;\n    if (resizeObserver) {\n      resizeObserver.disconnect();\n      resizeObserver.observe(container);\n    }\n\n    // Step 4: apply new props\n    that.setProps({...props, styleDiffing: false});\n    map.resize();\n    const {initialViewState} = props;\n    if (initialViewState) {\n      if (initialViewState.bounds) {\n        map.fitBounds(initialViewState.bounds, {...initialViewState.fitBoundsOptions, duration: 0});\n      } else {\n        that._updateViewState(initialViewState, false);\n      }\n    }\n\n    // Simulate load event\n    if (map.isStyleLoaded()) {\n      map.fire('load');\n    } else {\n      map.once('styledata', () => map.fire('load'));\n    }\n\n    // Force reload\n    // @ts-ignore\n    map._update();\n    return that;\n  }\n\n  /* eslint-disable complexity,max-statements */\n  _initialize(container: HTMLDivElement) {\n    const {props} = this;\n    const {mapStyle = DEFAULT_STYLE} = props;\n    const mapOptions = {\n      ...props,\n      ...props.initialViewState,\n      accessToken: props.mapboxAccessToken || getAccessTokenFromEnv() || null,\n      container,\n      style: normalizeStyle(mapStyle)\n    };\n\n    const viewState = mapOptions.initialViewState || mapOptions.viewState || mapOptions;\n    Object.assign(mapOptions, {\n      center: [viewState.longitude || 0, viewState.latitude || 0],\n      zoom: viewState.zoom || 0,\n      pitch: viewState.pitch || 0,\n      bearing: viewState.bearing || 0\n    });\n\n    if (props.gl) {\n      // eslint-disable-next-line\n      const getContext = HTMLCanvasElement.prototype.getContext;\n      // Hijack canvas.getContext to return our own WebGLContext\n      // This will be called inside the mapboxgl.Map constructor\n      // @ts-expect-error\n      HTMLCanvasElement.prototype.getContext = () => {\n        // Unhijack immediately\n        HTMLCanvasElement.prototype.getContext = getContext;\n        return props.gl;\n      };\n    }\n\n    const map = new this._MapClass(mapOptions) as MapInstanceInternal<MapT>;\n    // Props that are not part of constructor options\n    if (viewState.padding) {\n      map.setPadding(viewState.padding);\n    }\n    if (props.cursor) {\n      map.getCanvas().style.cursor = props.cursor;\n    }\n    this._createShadowTransform(map);\n\n    // Hack\n    // Insert code into map's render cycle\n    const renderMap = map._render;\n    map._render = (arg: number) => {\n      this._inRender = true;\n      renderMap.call(map, arg);\n      this._inRender = false;\n    };\n    const runRenderTaskQueue = map._renderTaskQueue.run;\n    map._renderTaskQueue.run = (arg: number) => {\n      runRenderTaskQueue.call(map._renderTaskQueue, arg);\n      this._onBeforeRepaint();\n    };\n    map.on('render', () => this._onAfterRepaint());\n    // Insert code into map's event pipeline\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const fireEvent = map.fire;\n    map.fire = this._fireEvent.bind(this, fireEvent);\n\n    // add listeners\n    map.on('resize', () => {\n      this._renderTransform.resize(map.transform.width, map.transform.height);\n    });\n    map.on('styledata', () => this._updateStyleComponents(this.props, {}));\n    map.on('sourcedata', () => this._updateStyleComponents(this.props, {}));\n    for (const eventName in pointerEvents) {\n      map.on(eventName, this._onPointerEvent);\n    }\n    for (const eventName in cameraEvents) {\n      map.on(eventName, this._onCameraEvent);\n    }\n    for (const eventName in otherEvents) {\n      map.on(eventName, this._onEvent);\n    }\n    this._map = map;\n  }\n  /* eslint-enable complexity,max-statements */\n\n  recycle() {\n    // Clean up unnecessary elements before storing for reuse.\n    const container = this.map.getContainer();\n    const children = container.querySelector('[mapboxgl-children]');\n    children?.remove();\n\n    Mapbox.savedMaps.push(this);\n  }\n\n  destroy() {\n    this._map.remove();\n  }\n\n  // Force redraw the map now. Typically resize() and jumpTo() is reflected in the next\n  // render cycle, which is managed by Mapbox's animation loop.\n  // This removes the synchronization issue caused by requestAnimationFrame.\n  redraw() {\n    const map = this._map as any;\n    // map._render will throw error if style does not exist\n    // https://github.com/mapbox/mapbox-gl-js/blob/fb9fc316da14e99ff4368f3e4faa3888fb43c513\n    //   /src/ui/map.js#L1834\n    if (!this._inRender && map.style) {\n      // cancel the scheduled update\n      if (map._frame) {\n        map._frame.cancel();\n        map._frame = null;\n      }\n      // the order is important - render() may schedule another update\n      map._render();\n    }\n  }\n\n  _createShadowTransform(map: any) {\n    const renderTransform = cloneTransform(map.transform);\n    map.painter.transform = renderTransform;\n\n    this._renderTransform = renderTransform;\n  }\n\n  /* Trigger map resize if size is controlled\n     @param {object} nextProps\n     @returns {bool} true if size has changed\n   */\n  _updateSize(nextProps: MapboxProps<MapT>): boolean {\n    // Check if size is controlled\n    const {viewState} = nextProps;\n    if (viewState) {\n      const map = this._map;\n      if (viewState.width !== map.transform.width || viewState.height !== map.transform.height) {\n        map.resize();\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Adapted from map.jumpTo\n  /* Update camera to match props\n     @param {object} nextProps\n     @param {bool} triggerEvents - should fire camera events\n     @returns {bool} true if anything is changed\n   */\n  _updateViewState(nextProps: MapboxProps<MapT>, triggerEvents: boolean): boolean {\n    if (this._internalUpdate) {\n      return false;\n    }\n    const map = this._map;\n\n    const tr = this._renderTransform;\n    // Take a snapshot of the transform before mutation\n    const {zoom, pitch, bearing} = tr;\n    const isMoving = map.isMoving();\n\n    if (isMoving) {\n      // All movement of the camera is done relative to the sea level\n      tr.cameraElevationReference = 'sea';\n    }\n    const changed = applyViewStateToTransform(tr, {\n      ...transformToViewState(map.transform),\n      ...nextProps\n    });\n    if (isMoving) {\n      // Reset camera reference\n      tr.cameraElevationReference = 'ground';\n    }\n\n    if (changed && triggerEvents) {\n      const deferredEvents = this._deferredEvents;\n      // Delay DOM control updates to the next render cycle\n      deferredEvents.move = true;\n      deferredEvents.zoom ||= zoom !== tr.zoom;\n      deferredEvents.rotate ||= bearing !== tr.bearing;\n      deferredEvents.pitch ||= pitch !== tr.pitch;\n    }\n\n    // Avoid manipulating the real transform when interaction/animation is ongoing\n    // as it would interfere with Mapbox's handlers\n    if (!isMoving) {\n      applyViewStateToTransform(map.transform, nextProps);\n    }\n\n    return changed;\n  }\n\n  /* Update camera constraints and projection settings to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateSettings(nextProps: MapboxProps<MapT>, currProps: MapboxProps<MapT>): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of settingNames) {\n      if (propName in nextProps && !deepEqual(nextProps[propName], currProps[propName])) {\n        changed = true;\n        const setter = map[`set${propName[0].toUpperCase()}${propName.slice(1)}`];\n        setter?.call(map, nextProps[propName]);\n      }\n    }\n    return changed;\n  }\n\n  /* Update map style to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if style is changed\n   */\n  _updateStyle(nextProps: MapboxProps<MapT>, currProps: MapboxProps<MapT>): boolean {\n    if (nextProps.cursor !== currProps.cursor) {\n      this._map.getCanvas().style.cursor = nextProps.cursor;\n    }\n    if (nextProps.mapStyle !== currProps.mapStyle) {\n      const {mapStyle = DEFAULT_STYLE, styleDiffing = true} = nextProps;\n      const options: any = {\n        diff: styleDiffing\n      };\n      if ('localIdeographFontFamily' in nextProps) {\n        // @ts-ignore Mapbox specific prop\n        options.localIdeographFontFamily = nextProps.localIdeographFontFamily;\n      }\n      this._map.setStyle(normalizeStyle(mapStyle), options);\n      return true;\n    }\n    return false;\n  }\n\n  /* Update fog, light and terrain to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateStyleComponents(nextProps: MapboxProps<MapT>, currProps: MapboxProps<MapT>): boolean {\n    const map = this._map;\n    let changed = false;\n    if (map.isStyleLoaded()) {\n      if ('light' in nextProps && map.setLight && !deepEqual(nextProps.light, currProps.light)) {\n        changed = true;\n        map.setLight(nextProps.light);\n      }\n      if ('fog' in nextProps && map.setFog && !deepEqual(nextProps.fog, currProps.fog)) {\n        changed = true;\n        map.setFog(nextProps.fog);\n      }\n      if (\n        'terrain' in nextProps &&\n        map.setTerrain &&\n        !deepEqual(nextProps.terrain, currProps.terrain)\n      ) {\n        if (!nextProps.terrain || map.getSource(nextProps.terrain.source)) {\n          changed = true;\n          map.setTerrain(nextProps.terrain);\n        }\n      }\n    }\n    return changed;\n  }\n\n  /* Update interaction handlers to match props\n     @param {object} nextProps\n     @param {object} currProps\n     @returns {bool} true if anything is changed\n   */\n  _updateHandlers(nextProps: MapboxProps<MapT>, currProps: MapboxProps<MapT>): boolean {\n    const map = this._map;\n    let changed = false;\n    for (const propName of handlerNames) {\n      const newValue = nextProps[propName] ?? true;\n      const oldValue = currProps[propName] ?? true;\n      if (!deepEqual(newValue, oldValue)) {\n        changed = true;\n        if (newValue) {\n          map[propName].enable(newValue);\n        } else {\n          map[propName].disable();\n        }\n      }\n    }\n    return changed;\n  }\n\n  _onEvent = (e: MapEvent<MapT>) => {\n    // @ts-ignore\n    const cb = this.props[otherEvents[e.type]];\n    if (cb) {\n      cb(e);\n    } else if (e.type === 'error') {\n      console.error((e as ErrorEvent<MapT>).error); // eslint-disable-line\n    }\n  };\n\n  private _queryRenderedFeatures(point: Point) {\n    const map = this._map;\n    const {interactiveLayerIds = []} = this.props;\n    try {\n      return map.queryRenderedFeatures(point, {\n        layers: interactiveLayerIds.filter(map.getLayer.bind(map))\n      });\n    } catch {\n      // May fail if style is not loaded\n      return [];\n    }\n  }\n\n  _updateHover(e: MapMouseEvent<MapT>) {\n    const {props} = this;\n    const shouldTrackHoveredFeatures =\n      props.interactiveLayerIds && (props.onMouseMove || props.onMouseEnter || props.onMouseLeave);\n\n    if (shouldTrackHoveredFeatures) {\n      const eventType = e.type;\n      const wasHovering = this._hoveredFeatures?.length > 0;\n      const features = this._queryRenderedFeatures(e.point);\n      const isHovering = features.length > 0;\n\n      if (!isHovering && wasHovering) {\n        e.type = 'mouseleave';\n        this._onPointerEvent(e);\n      }\n      this._hoveredFeatures = features;\n      if (isHovering && !wasHovering) {\n        e.type = 'mouseenter';\n        this._onPointerEvent(e);\n      }\n      e.type = eventType;\n    } else {\n      this._hoveredFeatures = null;\n    }\n  }\n\n  _onPointerEvent = (e: MapLayerMouseEvent<MapT> | MapLayerTouchEvent<MapT>) => {\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      this._updateHover(e);\n    }\n\n    // @ts-ignore\n    const cb = this.props[pointerEvents[e.type]];\n    if (cb) {\n      if (this.props.interactiveLayerIds && e.type !== 'mouseover' && e.type !== 'mouseout') {\n        e.features = this._hoveredFeatures || this._queryRenderedFeatures(e.point);\n      }\n      cb(e);\n      delete e.features;\n    }\n  };\n\n  _onCameraEvent = (e: ViewStateChangeEvent<MapT>) => {\n    if (!this._internalUpdate) {\n      // @ts-ignore\n      const cb = this.props[cameraEvents[e.type]];\n      if (cb) {\n        cb(e);\n      }\n    }\n    if (e.type in this._deferredEvents) {\n      this._deferredEvents[e.type] = false;\n    }\n  };\n\n  _fireEvent(baseFire: Function, event: string | MapEvent<MapT>, properties?: object) {\n    const map = this._map;\n    const tr = map.transform;\n\n    const eventType = typeof event === 'string' ? event : event.type;\n    if (eventType === 'move') {\n      this._updateViewState(this.props, false);\n    }\n    if (eventType in cameraEvents) {\n      if (typeof event === 'object') {\n        (event as unknown as ViewStateChangeEvent<MapT>).viewState = transformToViewState(tr);\n      }\n      if (this._map.isMoving()) {\n        // Replace map.transform with ours during the callbacks\n        map.transform = this._renderTransform;\n        baseFire.call(map, event, properties);\n        map.transform = tr;\n\n        return map;\n      }\n    }\n    baseFire.call(map, event, properties);\n\n    return map;\n  }\n\n  // All camera manipulations are complete, ready to repaint\n  _onBeforeRepaint() {\n    const map = this._map;\n\n    // If there are camera changes driven by props, invoke camera events so that DOM controls are synced\n    this._internalUpdate = true;\n    for (const eventType in this._deferredEvents) {\n      if (this._deferredEvents[eventType]) {\n        map.fire(eventType);\n      }\n    }\n    this._internalUpdate = false;\n\n    const tr = this._map.transform;\n    // Make sure camera matches the current props\n    this._map.transform = this._renderTransform;\n\n    this._onAfterRepaint = () => {\n      // Restores camera state before render/load events are fired\n      this._map.transform = tr;\n    };\n  }\n\n  _onAfterRepaint: () => void;\n}\n\n/**\n * Access token can be provided via one of:\n *   mapboxAccessToken prop\n *   access_token query parameter\n *   MapboxAccessToken environment variable\n *   REACT_APP_MAPBOX_ACCESS_TOKEN environment variable\n * @returns access token\n */\nfunction getAccessTokenFromEnv(): string {\n  let accessToken = null;\n\n  /* global location, process */\n  if (typeof location !== 'undefined') {\n    const match = /access_token=([^&\\/]*)/.exec(location.search);\n    accessToken = match && match[1];\n  }\n\n  // Note: This depends on bundler plugins (e.g. webpack) importing environment correctly\n  try {\n    accessToken = accessToken || process.env.MapboxAccessToken;\n  } catch {\n    // ignore\n  }\n\n  try {\n    accessToken = accessToken || process.env.REACT_APP_MAPBOX_ACCESS_TOKEN;\n  } catch {\n    // ignore\n  }\n\n  return accessToken;\n}\n","import type {MapInstance, MapInstanceInternal, LngLatLike, PointLike} from '../types';\nimport type Mapbox from './mapbox';\n\n/** These methods may break the react binding if called directly */\nconst skipMethods = [\n  'setMaxBounds',\n  'setMinZoom',\n  'setMaxZoom',\n  'setMinPitch',\n  'setMaxPitch',\n  'setRenderWorldCopies',\n  'setProjection',\n  'setStyle',\n  'addSource',\n  'removeSource',\n  'addLayer',\n  'removeLayer',\n  'setLayerZoomRange',\n  'setFilter',\n  'setPaintProperty',\n  'setLayoutProperty',\n  'setLight',\n  'setTerrain',\n  'setFog',\n  'remove'\n] as const;\n\nexport type MapRef<MapT extends MapInstance> = {\n  getMap(): MapT;\n} & Omit<MapT, typeof skipMethods[number]>;\n\nexport default function createRef<MapT extends MapInstance>(\n  mapInstance: Mapbox<MapT>\n): MapRef<MapT> {\n  if (!mapInstance) {\n    return null;\n  }\n\n  const map = mapInstance.map as MapInstanceInternal<MapT>;\n  const result: any = {\n    getMap: () => map,\n\n    // Overwrite getters to use our shadow transform\n    getCenter: () => mapInstance.transform.center,\n    getZoom: () => mapInstance.transform.zoom,\n    getBearing: () => mapInstance.transform.bearing,\n    getPitch: () => mapInstance.transform.pitch,\n    getPadding: () => mapInstance.transform.padding,\n    getBounds: () => mapInstance.transform.getBounds(),\n    project: (lnglat: LngLatLike) => {\n      const tr = map.transform;\n      map.transform = mapInstance.transform;\n      const result = map.project(lnglat);\n      map.transform = tr;\n      return result;\n    },\n    unproject: (point: PointLike) => {\n      const tr = map.transform;\n      map.transform = mapInstance.transform;\n      const result = map.unproject(point);\n      map.transform = tr;\n      return result;\n    },\n    // options diverge between mapbox and maplibre\n    queryTerrainElevation: (lnglat: LngLatLike, options?: any) => {\n      const tr = map.transform;\n      map.transform = mapInstance.transform;\n      const result = map.queryTerrainElevation(lnglat, options);\n      map.transform = tr;\n      return result;\n    }\n  };\n\n  for (const key of getMethodNames(map)) {\n    // @ts-expect-error\n    if (!(key in result) && !skipMethods.includes(key)) {\n      result[key] = map[key].bind(map);\n    }\n  }\n\n  return result;\n}\n\nfunction getMethodNames(obj) {\n  const result = new Set<string>();\n\n  let proto = obj;\n  while (proto) {\n    for (const key of Object.getOwnPropertyNames(proto)) {\n      if (\n        key[0] !== '_' &&\n        typeof obj[key] === 'function' &&\n        key !== 'fire' &&\n        key !== 'setEventedParent'\n      ) {\n        result.add(key);\n      }\n    }\n    proto = Object.getPrototypeOf(proto);\n  }\n  return Array.from(result);\n}\n","// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof document !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","export type GlobalSettings = {\n  /** The map's default API URL for requesting tiles, styles, sprites, and glyphs. */\n  baseApiUrl?: string;\n  /** The maximum number of images (raster tiles, sprites, icons) to load in parallel.\n   * @default 16\n   */\n  maxParallelImageRequests?: number;\n  /** The map's RTL text plugin. Necessary for supporting the Arabic and Hebrew languages, which are written right-to-left.  */\n  RTLTextPlugin?: string;\n  /** Provides an interface for external module bundlers such as Webpack or Rollup to package mapbox-gl's WebWorker into a separate class and integrate it with the library.\nTakes precedence over `workerUrl`. */\n  workerClass?: any;\n  /** The number of web workers instantiated on a page with mapbox-gl maps.\n   * @default 2\n   */\n  workerCount?: number;\n  /** Provides an interface for loading mapbox-gl's WebWorker bundle from a self-hosted URL.\n   * This is useful if your site needs to operate in a strict CSP (Content Security Policy) environment\n   * wherein you are not allowed to load JavaScript code from a Blob URL, which is default behavior. */\n  workerUrl?: string;\n};\n\nconst globalSettings = [\n  'baseApiUrl',\n  'maxParallelImageRequests',\n  'workerClass',\n  'workerCount',\n  'workerUrl'\n] as const;\n\nexport default function setGlobals(mapLib: any, props: GlobalSettings) {\n  for (const key of globalSettings) {\n    if (key in props) {\n      mapLib[key] = props[key];\n    }\n  }\n\n  const {\n    RTLTextPlugin = 'https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-rtl-text/v0.2.3/mapbox-gl-rtl-text.js'\n  } = props;\n  if (\n    RTLTextPlugin &&\n    mapLib.getRTLTextPluginStatus &&\n    mapLib.getRTLTextPluginStatus() === 'unavailable'\n  ) {\n    mapLib.setRTLTextPlugin(\n      RTLTextPlugin,\n      (error?: Error) => {\n        if (error) {\n          // eslint-disable-next-line\n          console.error(error);\n        }\n      },\n      false\n    );\n  }\n}\n","import * as React from 'react';\nimport {useState, useRef, useEffect, useContext, useMemo, useImperativeHandle} from 'react';\n\nimport {MountedMapsContext} from './use-map';\nimport Mapbox, {MapboxProps} from '../mapbox/mapbox';\nimport createRef, {MapRef} from '../mapbox/create-ref';\n\nimport type {CSSProperties} from 'react';\nimport useIsomorphicLayoutEffect from '../utils/use-isomorphic-layout-effect';\nimport setGlobals, {GlobalSettings} from '../utils/set-globals';\nimport type {MapLib, MapInstance} from '../types';\n\nexport type MapContextValue<MapT extends MapInstance = MapInstance> = {\n  mapLib: MapLib<MapT>;\n  map: MapRef<MapT>;\n};\n\nexport const MapContext = React.createContext<MapContextValue>(null);\n\ntype MapInitOptions<MapOptions> = Omit<\n  MapOptions,\n  'style' | 'container' | 'bounds' | 'fitBoundsOptions' | 'center'\n>;\n\nexport type MapProps<MapOptions, MapT extends MapInstance> = MapInitOptions<MapOptions> &\n  MapboxProps<MapT> &\n  GlobalSettings & {\n    mapLib?: MapLib<MapT> | Promise<MapLib<MapT>>;\n    reuseMaps?: boolean;\n    /** Map container id */\n    id?: string;\n    /** Map container CSS style */\n    style?: CSSProperties;\n    children?: any;\n  };\n\nexport default function Map<MapOptions, MapT extends MapInstance>(\n  props: MapProps<MapOptions, MapT>,\n  ref: React.Ref<MapRef<MapT>>,\n  defaultLib: MapLib<MapT> | Promise<MapLib<MapT>>\n) {\n  const mountedMapsContext = useContext(MountedMapsContext);\n  const [mapInstance, setMapInstance] = useState<Mapbox<MapT>>(null);\n  const containerRef = useRef();\n\n  const {current: contextValue} = useRef<MapContextValue<MapT>>({mapLib: null, map: null});\n\n  useEffect(() => {\n    const mapLib = props.mapLib;\n    let isMounted = true;\n    let mapbox: Mapbox<MapT>;\n\n    Promise.resolve(mapLib || defaultLib)\n      .then((module: MapLib<MapT> | {default: MapLib<MapT>}) => {\n        if (!isMounted) {\n          return;\n        }\n        if (!module) {\n          throw new Error('Invalid mapLib');\n        }\n        const mapboxgl = 'Map' in module ? module : module.default;\n        if (!mapboxgl.Map) {\n          throw new Error('Invalid mapLib');\n        }\n\n        // workerUrl & workerClass may change the result of supported()\n        // https://github.com/visgl/react-map-gl/discussions/2027\n        setGlobals(mapboxgl, props);\n        if (!mapboxgl.supported || mapboxgl.supported(props)) {\n          if (props.reuseMaps) {\n            mapbox = Mapbox.reuse(props, containerRef.current);\n          }\n          if (!mapbox) {\n            mapbox = new Mapbox(mapboxgl.Map, props, containerRef.current);\n          }\n          contextValue.map = createRef(mapbox);\n          contextValue.mapLib = mapboxgl;\n\n          setMapInstance(mapbox);\n          mountedMapsContext?.onMapMount(contextValue.map, props.id);\n        } else {\n          throw new Error('Map is not supported by this browser');\n        }\n      })\n      .catch(error => {\n        const {onError} = props;\n        if (onError) {\n          onError({\n            type: 'error',\n            target: null,\n            originalEvent: null,\n            error\n          });\n        } else {\n          console.error(error); // eslint-disable-line\n        }\n      });\n\n    return () => {\n      isMounted = false;\n      if (mapbox) {\n        mountedMapsContext?.onMapUnmount(props.id);\n        if (props.reuseMaps) {\n          mapbox.recycle();\n        } else {\n          mapbox.destroy();\n        }\n      }\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    if (mapInstance) {\n      mapInstance.setProps(props);\n    }\n  });\n\n  useImperativeHandle(ref, () => contextValue.map, [mapInstance]);\n\n  const style: CSSProperties = useMemo(\n    () => ({\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      ...props.style\n    }),\n    [props.style]\n  );\n\n  const CHILD_CONTAINER_STYLE = {\n    height: '100%'\n  };\n\n  return (\n    <div id={props.id} ref={containerRef} style={style}>\n      {mapInstance && (\n        <MapContext.Provider value={contextValue}>\n          <div mapboxgl-children=\"\" style={CHILD_CONTAINER_STYLE}>\n            {props.children}\n          </div>\n        </MapContext.Provider>\n      )}\n    </div>\n  );\n}\n","import * as React from 'react';\n// This is a simplified version of\n// https://github.com/facebook/react/blob/4131af3e4bf52f3a003537ec95a1655147c81270/src/renderers/dom/shared/CSSPropertyOperations.js#L62\nconst unitlessNumber = /box|flex|grid|column|lineHeight|fontWeight|opacity|order|tabSize|zIndex/;\n\nexport function applyReactStyle(element: HTMLElement, styles: React.CSSProperties) {\n  if (!element || !styles) {\n    return;\n  }\n  const style = element.style;\n\n  for (const key in styles) {\n    const value = styles[key];\n    if (Number.isFinite(value) && !unitlessNumber.test(key)) {\n      style[key] = `${value}px`;\n    } else {\n      style[key] = value;\n    }\n  }\n}\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useImperativeHandle, useEffect, useMemo, useRef, useContext, forwardRef, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {MarkerEvent, MarkerDragEvent, PointLike, MarkerInstance} from '../types';\n\nimport {MapContext} from './map';\nimport {arePointsEqual} from '../utils/deep-equal';\n\nexport type MarkerProps<OptionsT, MarkerT extends MarkerInstance> = OptionsT & {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n\n  // These types will be further constraint by OptionsT\n  draggable?: boolean;\n  offset?: PointLike;\n  pitchAlignment?: string;\n  rotation?: number;\n  rotationAlignment?: string;\n  popup?: any;\n\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n  onClick?: (e: MarkerEvent<MarkerT, MouseEvent>) => void;\n  onDragStart?: (e: MarkerDragEvent<MarkerT>) => void;\n  onDrag?: (e: MarkerDragEvent<MarkerT>) => void;\n  onDragEnd?: (e: MarkerDragEvent<MarkerT>) => void;\n  children?: React.ReactNode;\n};\n\n/* eslint-disable complexity,max-statements */\nfunction Marker<MarkerOptions, MarkerT extends MarkerInstance>(\n  props: MarkerProps<MarkerOptions, MarkerT>,\n  ref: React.Ref<MarkerT>\n) {\n  const {map, mapLib} = useContext(MapContext);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const marker: MarkerT = useMemo(() => {\n    let hasChildren = false;\n    React.Children.forEach(props.children, el => {\n      if (el) {\n        hasChildren = true;\n      }\n    });\n    const options = {\n      ...props,\n      element: hasChildren ? document.createElement('div') : null\n    };\n\n    const mk = new mapLib.Marker(options) as MarkerT;\n    mk.setLngLat([props.longitude, props.latitude]);\n\n    mk.getElement().addEventListener('click', (e: MouseEvent) => {\n      thisRef.current.props.onClick?.({\n        type: 'click',\n        target: mk,\n        originalEvent: e\n      });\n    });\n\n    mk.on('dragstart', e => {\n      const evt = e as MarkerDragEvent<MarkerT>;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragStart?.(evt);\n    });\n    mk.on('drag', e => {\n      const evt = e as MarkerDragEvent<MarkerT>;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDrag?.(evt);\n    });\n    mk.on('dragend', e => {\n      const evt = e as MarkerDragEvent<MarkerT>;\n      evt.lngLat = marker.getLngLat();\n      thisRef.current.props.onDragEnd?.(evt);\n    });\n\n    return mk;\n  }, []);\n\n  useEffect(() => {\n    marker.addTo(map.getMap());\n\n    return () => {\n      marker.remove();\n    };\n  }, []);\n\n  const {\n    longitude,\n    latitude,\n    offset,\n    style,\n    draggable = false,\n    popup = null,\n    rotation = 0,\n    rotationAlignment = 'auto',\n    pitchAlignment = 'auto'\n  } = props;\n\n  useEffect(() => {\n    applyReactStyle(marker.getElement(), style);\n  }, [style]);\n\n  useImperativeHandle(ref, () => marker, []);\n\n  if (marker.getLngLat().lng !== longitude || marker.getLngLat().lat !== latitude) {\n    marker.setLngLat([longitude, latitude]);\n  }\n  if (offset && !arePointsEqual(marker.getOffset(), offset)) {\n    marker.setOffset(offset);\n  }\n  if (marker.isDraggable() !== draggable) {\n    marker.setDraggable(draggable);\n  }\n  if (marker.getRotation() !== rotation) {\n    marker.setRotation(rotation);\n  }\n  if (marker.getRotationAlignment() !== rotationAlignment) {\n    marker.setRotationAlignment(rotationAlignment);\n  }\n  if (marker.getPitchAlignment() !== pitchAlignment) {\n    marker.setPitchAlignment(pitchAlignment);\n  }\n  if (marker.getPopup() !== popup) {\n    marker.setPopup(popup);\n  }\n\n  return createPortal(props.children, marker.getElement());\n}\n\nexport default memo(forwardRef(Marker));\n","/* global document */\nimport * as React from 'react';\nimport {createPortal} from 'react-dom';\nimport {useImperativeHandle, useEffect, useMemo, useRef, useContext, forwardRef, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\n\nimport type {PopupEvent, PopupInstance} from '../types';\n\nimport {MapContext} from './map';\nimport {deepEqual} from '../utils/deep-equal';\n\nexport type PopupProps<OptionsT, PopupT extends PopupInstance> = OptionsT & {\n  /** Longitude of the anchor location */\n  longitude: number;\n  /** Latitude of the anchor location */\n  latitude: number;\n\n  // These types will be further constraint by OptionsT\n  anchor?: string;\n  offset?: any;\n  className?: string;\n  maxWidth?: string;\n\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  onOpen?: (e: PopupEvent<PopupT>) => void;\n  onClose?: (e: PopupEvent<PopupT>) => void;\n  children?: React.ReactNode;\n};\n\n// Adapted from https://github.com/mapbox/mapbox-gl-js/blob/v1.13.0/src/ui/popup.js\nfunction getClassList(className: string) {\n  return new Set(className ? className.trim().split(/\\s+/) : []);\n}\n\n/* eslint-disable complexity,max-statements */\nfunction Popup<PopupOptions, PopupT extends PopupInstance>(\n  props: PopupProps<PopupOptions, PopupT>,\n  ref: React.Ref<PopupT>\n) {\n  const {map, mapLib} = useContext(MapContext);\n  const container = useMemo(() => {\n    return document.createElement('div');\n  }, []);\n  const thisRef = useRef({props});\n  thisRef.current.props = props;\n\n  const popup: PopupT = useMemo(() => {\n    const options = {...props};\n    const pp = new mapLib.Popup(options) as PopupT;\n    pp.setLngLat([props.longitude, props.latitude]);\n    pp.once('open', e => {\n      thisRef.current.props.onOpen?.(e as PopupEvent<PopupT>);\n    });\n    return pp;\n  }, []);\n\n  useEffect(() => {\n    const onClose = e => {\n      thisRef.current.props.onClose?.(e as PopupEvent<PopupT>);\n    };\n    popup.on('close', onClose);\n    popup.setDOMContent(container).addTo(map.getMap());\n\n    return () => {\n      // https://github.com/visgl/react-map-gl/issues/1825\n      // onClose should not be fired if the popup is removed by unmounting\n      // When using React strict mode, the component is mounted twice.\n      // Firing the onClose callback here would be a false signal to remove the component.\n      popup.off('close', onClose);\n      if (popup.isOpen()) {\n        popup.remove();\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    applyReactStyle(popup.getElement(), props.style);\n  }, [props.style]);\n\n  useImperativeHandle(ref, () => popup, []);\n\n  if (popup.isOpen()) {\n    if (popup.getLngLat().lng !== props.longitude || popup.getLngLat().lat !== props.latitude) {\n      popup.setLngLat([props.longitude, props.latitude]);\n    }\n    if (props.offset && !deepEqual(popup.options.offset, props.offset)) {\n      popup.setOffset(props.offset);\n    }\n    if (popup.options.anchor !== props.anchor || popup.options.maxWidth !== props.maxWidth) {\n      popup.options.anchor = props.anchor;\n      popup.setMaxWidth(props.maxWidth);\n    }\n    if (popup.options.className !== props.className) {\n      const prevClassList = getClassList(popup.options.className);\n      const nextClassList = getClassList(props.className);\n\n      for (const c of prevClassList) {\n        if (!nextClassList.has(c)) {\n          popup.removeClassName(c);\n        }\n      }\n      for (const c of nextClassList) {\n        if (!prevClassList.has(c)) {\n          popup.addClassName(c);\n        }\n      }\n      popup.options.className = props.className;\n    }\n  }\n\n  return createPortal(props.children, container);\n}\n\nexport default memo(forwardRef(Popup));\n","import {useContext, useMemo, useEffect} from 'react';\nimport type {IControl, ControlPosition} from '../types';\nimport {MapContext} from './map';\nimport type {MapContextValue} from './map';\n\ntype ControlOptions = {\n  position?: ControlPosition;\n};\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  onAdd: (context: MapContextValue) => void,\n  onRemove: (context: MapContextValue) => void,\n  opts?: ControlOptions\n): T;\n\nfunction useControl<T extends IControl>(\n  onCreate: (context: MapContextValue) => T,\n  arg1?: ((context: MapContextValue) => void) | ControlOptions,\n  arg2?: ((context: MapContextValue) => void) | ControlOptions,\n  arg3?: ControlOptions\n): T {\n  const context = useContext(MapContext);\n  const ctrl = useMemo(() => onCreate(context), []);\n\n  useEffect(() => {\n    const opts = (arg3 || arg2 || arg1) as ControlOptions;\n    const onAdd = typeof arg1 === 'function' && typeof arg2 === 'function' ? arg1 : null;\n    const onRemove = typeof arg2 === 'function' ? arg2 : typeof arg1 === 'function' ? arg1 : null;\n\n    const {map} = context;\n    if (!map.hasControl(ctrl)) {\n      map.addControl(ctrl, opts?.position);\n      if (onAdd) {\n        onAdd(context);\n      }\n    }\n\n    return () => {\n      if (onRemove) {\n        onRemove(context);\n      }\n      // Map might have been removed (parent effects are destroyed before child ones)\n      if (map.hasControl(ctrl)) {\n        map.removeControl(ctrl);\n      }\n    };\n  }, []);\n\n  return ctrl;\n}\n\nexport default useControl;\n","import * as React from 'react';\nimport {useEffect, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, AttributionControlInstance} from '../types';\n\nexport type AttributionControlProps<OptionsT> = OptionsT & {\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction AttributionControl<AttributionControlOptions, ControlT extends AttributionControlInstance>(\n  props: AttributionControlProps<AttributionControlOptions>\n): null {\n  const ctrl = useControl<ControlT>(\n    ({mapLib}) => new mapLib.AttributionControl(props) as ControlT,\n    {\n      position: props.position\n    }\n  );\n\n  useEffect(() => {\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default memo(AttributionControl);\n","/* global document */\nimport * as React from 'react';\nimport {useEffect, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, FullscreenControlInstance} from '../types';\n\nexport type FullscreenControlProps<OptionsT> = Omit<OptionsT, 'container'> & {\n  /** Id of the DOM element which should be made full screen. By default, the map container\n   * element will be made full screen. */\n  containerId?: string;\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction FullscreenControl<FullscreenControlOptions, ControlT extends FullscreenControlInstance>(\n  props: FullscreenControlProps<FullscreenControlOptions>\n): null {\n  const ctrl = useControl<ControlT>(\n    ({mapLib}) =>\n      new mapLib.FullscreenControl({\n        container: props.containerId && document.getElementById(props.containerId)\n      }) as ControlT,\n    {position: props.position}\n  );\n\n  useEffect(() => {\n    applyReactStyle(ctrl._controlContainer, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default memo(FullscreenControl);\n","import * as React from 'react';\nimport {useImperativeHandle, useRef, useEffect, forwardRef, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {\n  ControlPosition,\n  GeolocateControlInstance,\n  GeolocateEvent,\n  GeolocateResultEvent,\n  GeolocateErrorEvent\n} from '../types';\n\nexport type GeolocateControlProps<\n  OptionsT,\n  ControlT extends GeolocateControlInstance\n> = OptionsT & {\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n\n  /** Called on each Geolocation API position update that returned as success. */\n  onGeolocate?: (e: GeolocateResultEvent<ControlT>) => void;\n  /** Called on each Geolocation API position update that returned as an error. */\n  onError?: (e: GeolocateErrorEvent<ControlT>) => void;\n  /** Called on each Geolocation API position update that returned as success but user position\n   * is out of map `maxBounds`. */\n  onOutOfMaxBounds?: (e: GeolocateResultEvent<ControlT>) => void;\n  /** Called when the GeolocateControl changes to the active lock state. */\n  onTrackUserLocationStart?: (e: GeolocateEvent<ControlT>) => void;\n  /** Called when the GeolocateControl changes to the background state. */\n  onTrackUserLocationEnd?: (e: GeolocateEvent<ControlT>) => void;\n};\n\nfunction GeolocateControl<GeolocateControlOptions, ControlT extends GeolocateControlInstance>(\n  props: GeolocateControlProps<GeolocateControlOptions, ControlT>,\n  ref: React.Ref<ControlT>\n) {\n  const thisRef = useRef({props});\n\n  const ctrl = useControl<ControlT>(\n    ({mapLib}) => {\n      const gc = new mapLib.GeolocateControl(props) as ControlT;\n\n      // Hack: fix GeolocateControl reuse\n      // When using React strict mode, the component is mounted twice.\n      // GeolocateControl's UI creation is asynchronous. Removing and adding it back causes the UI to be initialized twice.\n      // @ts-expect-error private method\n      const setupUI = gc._setupUI;\n      // @ts-expect-error private method\n      gc._setupUI = args => {\n        if (!gc._container.hasChildNodes()) {\n          setupUI(args);\n        }\n      };\n\n      gc.on('geolocate', e => {\n        thisRef.current.props.onGeolocate?.(e as GeolocateResultEvent<ControlT>);\n      });\n      gc.on('error', e => {\n        thisRef.current.props.onError?.(e as GeolocateErrorEvent<ControlT>);\n      });\n      gc.on('outofmaxbounds', e => {\n        thisRef.current.props.onOutOfMaxBounds?.(e as GeolocateResultEvent<ControlT>);\n      });\n      gc.on('trackuserlocationstart', e => {\n        thisRef.current.props.onTrackUserLocationStart?.(e as GeolocateEvent<ControlT>);\n      });\n      gc.on('trackuserlocationend', e => {\n        thisRef.current.props.onTrackUserLocationEnd?.(e as GeolocateEvent<ControlT>);\n      });\n\n      return gc;\n    },\n    {position: props.position}\n  );\n\n  thisRef.current.props = props;\n\n  useImperativeHandle(ref, () => ctrl, []);\n\n  useEffect(() => {\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default memo(forwardRef(GeolocateControl));\n","import * as React from 'react';\nimport {useEffect, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, NavigationControlInstance} from '../types';\n\nexport type NavigationControlProps<OptionsT> = OptionsT & {\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction NavigationControl<NavigationControlOptions, ControlT extends NavigationControlInstance>(\n  props: NavigationControlProps<NavigationControlOptions>\n): null {\n  const ctrl = useControl<ControlT>(({mapLib}) => new mapLib.NavigationControl(props) as ControlT, {\n    position: props.position\n  });\n\n  useEffect(() => {\n    applyReactStyle(ctrl._container, props.style);\n  }, [props.style]);\n\n  return null;\n}\n\nexport default memo(NavigationControl);\n","import * as React from 'react';\nimport {useEffect, useRef, memo} from 'react';\nimport {applyReactStyle} from '../utils/apply-react-style';\nimport useControl from './use-control';\n\nimport type {ControlPosition, ScaleControlInstance} from '../types';\n\nexport type ScaleControlProps<OptionsT> = OptionsT & {\n  // These props will be further constraint by OptionsT\n  unit?: string;\n  maxWidth?: number;\n\n  /** Placement of the control relative to the map. */\n  position?: ControlPosition;\n  /** CSS style override, applied to the control's container */\n  style?: React.CSSProperties;\n};\n\nfunction ScaleControl<ScaleControlOptions, ControlT extends ScaleControlInstance>(\n  props: ScaleControlProps<ScaleControlOptions>\n): null {\n  const ctrl = useControl<ControlT>(({mapLib}) => new mapLib.ScaleControl(props) as ControlT, {\n    position: props.position\n  });\n  const propsRef = useRef<ScaleControlProps<ScaleControlOptions>>(props);\n\n  const prevProps = propsRef.current;\n  propsRef.current = props;\n\n  const {style} = props;\n\n  if (props.maxWidth !== undefined && props.maxWidth !== prevProps.maxWidth) {\n    ctrl.options.maxWidth = props.maxWidth;\n  }\n  if (props.unit !== undefined && props.unit !== prevProps.unit) {\n    ctrl.setUnit(props.unit);\n  }\n\n  useEffect(() => {\n    applyReactStyle(ctrl._container, style);\n  }, [style]);\n\n  return null;\n}\n\nexport default memo(ScaleControl);\n","import * as React from 'react';\nimport type {\n  Map as MapboxMap,\n  MapboxOptions,\n  Marker as MapboxMarker,\n  MarkerOptions,\n  Popup as MapboxPopup,\n  PopupOptions,\n  AttributionControl as MapboxAttributionControl,\n  FullscreenControl as MapboxFullscreenControl,\n  GeolocateControl as MapboxGeolocateControl,\n  NavigationControl as MapboxNavigationControl,\n  ScaleControl as MapboxScaleControl\n} from 'mapbox-gl';\n\nimport {default as _Map, MapProps as _MapProps} from './components/map';\nimport {default as _Marker, MarkerProps as _MarkerProps} from './components/marker';\nimport {default as _Popup, PopupProps as _PopupProps} from './components/popup';\nimport {\n  default as _AttributionControl,\n  AttributionControlProps as _AttributionControlProps\n} from './components/attribution-control';\nimport {\n  default as _FullscreenControl,\n  FullscreenControlProps as _FullscreenControlProps\n} from './components/fullscreen-control';\nimport {\n  default as _GeolocateControl,\n  GeolocateControlProps as _GeolocateControlProps\n} from './components/geolocate-control';\nimport {\n  default as _NavigationControl,\n  NavigationControlProps as _NavigationControlProps\n} from './components/navigation-control';\nimport {\n  default as _ScaleControl,\n  ScaleControlProps as _ScaleControlProps\n} from './components/scale-control';\nimport {useMap as _useMap} from './components/use-map';\nimport type {MapRef as _MapRef} from './mapbox/create-ref';\nimport type * as events from './types/events';\n\nexport function useMap() {\n  return _useMap<MapboxMap>();\n}\n\nexport type MapProps = _MapProps<MapboxOptions, MapboxMap>;\nexport type MapRef = _MapRef<MapboxMap>;\nconst mapLib = import('mapbox-gl');\nexport const Map = (() => {\n  return React.forwardRef(function Map(props: MapProps, ref: React.Ref<MapRef>) {\n    return _Map(props, ref, mapLib);\n  });\n})();\n\nexport type MarkerProps = _MarkerProps<MarkerOptions, MapboxMarker>;\nexport const Marker = _Marker as (\n  props: MarkerProps & React.RefAttributes<MapboxMarker>\n) => React.ReactElement | null;\n\nexport type PopupProps = _PopupProps<PopupOptions, MapboxPopup>;\nexport const Popup = _Popup as (\n  props: PopupProps & React.RefAttributes<MapboxPopup>\n) => React.ReactElement | null;\n\ntype AttributionControlOptions = ConstructorParameters<typeof MapboxAttributionControl>[0];\nexport type AttributionControlProps = _AttributionControlProps<AttributionControlOptions>;\nexport const AttributionControl = _AttributionControl as (\n  props: AttributionControlProps\n) => React.ReactElement | null;\n\ntype FullscreenControlOptions = ConstructorParameters<typeof MapboxFullscreenControl>[0];\nexport type FullscreenControlProps = _FullscreenControlProps<FullscreenControlOptions>;\nexport const FullscreenControl = _FullscreenControl as (\n  props: FullscreenControlProps\n) => React.ReactElement | null;\n\ntype NavigationControlOptions = ConstructorParameters<typeof MapboxNavigationControl>[0];\nexport type NavigationControlProps = _NavigationControlProps<NavigationControlOptions>;\nexport const NavigationControl = _NavigationControl as (\n  props: NavigationControlProps\n) => React.ReactElement | null;\n\ntype GeolocateControlOptions = ConstructorParameters<typeof MapboxGeolocateControl>[0];\nexport type GeolocateControlProps = _GeolocateControlProps<\n  GeolocateControlOptions,\n  MapboxGeolocateControl\n>;\nexport const GeolocateControl = _GeolocateControl as (\n  props: GeolocateControlProps & React.RefAttributes<MapboxGeolocateControl>\n) => React.ReactElement | null;\n\ntype ScaleControlOptions = ConstructorParameters<typeof MapboxScaleControl>[0];\nexport type ScaleControlProps = _ScaleControlProps<ScaleControlOptions>;\nexport const ScaleControl = _ScaleControl as (\n  props: ScaleControlProps\n) => React.ReactElement | null;\n\nexport {default as Source} from './components/source';\nexport {default as Layer} from './components/layer';\nexport {default as useControl} from './components/use-control';\nexport {MapProvider} from './components/use-map';\n\nexport default Map;\n\n// Types\nexport * from './types/public';\nexport type {SourceProps} from './components/source';\nexport type {LayerProps} from './components/layer';\n\n// Events\nexport type MapEvent = events.MapEvent<MapboxMap>;\nexport type ErrorEvent = events.ErrorEvent<MapboxMap>;\nexport type MapStyleDataEvent = events.MapStyleDataEvent<MapboxMap>;\nexport type MapSourceDataEvent = events.MapSourceDataEvent<MapboxMap>;\nexport type MapMouseEvent = events.MapMouseEvent<MapboxMap>;\nexport type MapLayerMouseEvent = events.MapLayerMouseEvent<MapboxMap>;\nexport type MapTouchEvent = events.MapTouchEvent<MapboxMap>;\nexport type MapLayerTouchEvent = events.MapLayerTouchEvent<MapboxMap>;\nexport type MapWheelEvent = events.MapWheelEvent<MapboxMap>;\nexport type MapBoxZoomEvent = events.MapBoxZoomEvent<MapboxMap>;\nexport type ViewStateChangeEvent = events.ViewStateChangeEvent<MapboxMap>;\nexport type PopupEvent = events.PopupEvent<MapboxPopup>;\nexport type MarkerEvent = events.MarkerEvent<MapboxMarker>;\nexport type MarkerDragEvent = events.MarkerDragEvent<MapboxMarker>;\nexport type GeolocateEvent = events.GeolocateEvent<MapboxGeolocateControl>;\nexport type GeolocateResultEvent = events.GeolocateResultEvent<MapboxGeolocateControl>;\nexport type GeolocateErrorEvent = events.GeolocateErrorEvent<MapboxGeolocateControl>;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["MountedMapsContext","React","transformToViewState","tr","longitude","center","lng","latitude","lat","zoom","pitch","bearing","padding","applyViewStateToTransform","props","v","viewState","changed","constructor","isPaddingEqual","refProps","normalizeStyle","style","toJS","layers","_step","layerIndex","_iterator","_createForOfIteratorHelper","s","n","done","layer","value","id","err","e","f","map","normalizedLayer","Object","assign","interactive","layerRef","ref","_step2","_iterator2","propName","_objectSpread","deepEqual","a","b","Array","isArray","length","i","aKeys","keys","bKeys","_i","_aKeys","key","hasOwnProperty","DEFAULT_STYLE","version","sources","pointerEvents","mousedown","mouseup","mouseover","mousemove","click","dblclick","mouseenter","mouseleave","mouseout","contextmenu","touchstart","touchend","touchmove","touchcancel","cameraEvents","movestart","move","moveend","dragstart","drag","dragend","zoomstart","zoomend","rotatestart","rotate","rotateend","pitchstart","pitchend","otherEvents","wheel","boxzoomstart","boxzoomend","boxzoomcancel","resize","load","render","idle","remove","data","styledata","sourcedata","error","settingNames","handlerNames","Mapbox","MapClass","container","_this","_classCallCheck","_map","_internalUpdate","_inRender","_hoveredFeatures","_deferredEvents","_onEvent","cb","type","console","_onPointerEvent","_updateHover","interactiveLayerIds","features","_queryRenderedFeatures","point","_onCameraEvent","this","_MapClass","_initialize","_createClass","get","_renderTransform","oldProps","settingsChanged","_updateSettings","_createShadowTransform","sizeChanged","_updateSize","viewStateChanged","_updateViewState","_updateStyle","_updateStyleComponents","_updateHandlers","isMoving","redraw","_this2","_props$mapStyle","mapStyle","mapOptions","initialViewState","accessToken","mapboxAccessToken","getAccessTokenFromEnv","gl","getContext","HTMLCanvasElement","prototype","setPadding","cursor","getCanvas","renderMap","_render","arg","call","runRenderTaskQueue","_renderTaskQueue","run","_onBeforeRepaint","on","_onAfterRepaint","fireEvent","fire","eventName","_fireEvent","bind","transform","width","height","children","getContainer","querySelector","savedMaps","push","_frame","cancel","renderTransform","newTransform","clone","pixelsToGLUnits","cloneTransform","painter","nextProps","triggerEvents","cameraElevationReference","deferredEvents","currProps","_settingNames","setter","concat","toUpperCase","slice","_nextProps$mapStyle","_nextProps$styleDiffi","styleDiffing","options","diff","localIdeographFontFamily","setStyle","isStyleLoaded","setLight","light","setFog","fog","setTerrain","terrain","getSource","source","_i2","_handlerNames","newValue","_a","_b","enable","disable","_this$props$interacti","queryRenderedFeatures","filter","getLayer","onMouseMove","onMouseEnter","onMouseLeave","eventType","wasHovering","isHovering","baseFire","event","properties","_this3","that","pop","oldContainer","className","childNodes","appendChild","_container","resizeObserver","_resizeObserver","disconnect","observe","setProps","bounds","fitBounds","fitBoundsOptions","duration","once","_update","location","match","exec","search","process","MapboxAccessToken","REACT_APP_MAPBOX_ACCESS_TOKEN","skipMethods","createRef","mapInstance","result","getMap","getCenter","getZoom","getBearing","getPitch","getPadding","getBounds","project","lnglat","unproject","queryTerrainElevation","obj","Set","proto","getOwnPropertyNames","add","getPrototypeOf","from","getMethodNames","includes","document","useLayoutEffect","useEffect","globalSettings","MapContext","Map","defaultLib","mountedMapsContext","useContext","_useState","useState","_useState2","_slicedToArray","setMapInstance","containerRef","useRef","contextValue","mapLib","current","mapbox","isMounted","Promise","resolve","then","module","Error","mapboxgl","default","_props$RTLTextPlugin","RTLTextPlugin","getRTLTextPluginStatus","setRTLTextPlugin","setGlobals","supported","reuseMaps","reuse","onMapMount","catch","onError","target","originalEvent","onMapUnmount","recycle","destroy","useIsomorphicLayoutEffect","useImperativeHandle","useMemo","position","Provider","unitlessNumber","applyReactStyle","element","styles","Number","isFinite","test","memo","forwardRef","_useContext","thisRef","marker","hasChildren","forEach","el","createElement","mk","Marker","setLngLat","getElement","addEventListener","onClick","evt","lngLat","getLngLat","onDragStart","onDrag","onDragEnd","addTo","offset","_props$draggable","draggable","_props$popup","popup","_props$rotation","rotation","_props$rotationAlignm","rotationAlignment","_props$pitchAlignment","pitchAlignment","ax","x","ay","y","bx","by","arePointsEqual","getOffset","setOffset","isDraggable","setDraggable","getRotation","setRotation","getRotationAlignment","setRotationAlignment","getPitchAlignment","setPitchAlignment","getPopup","setPopup","createPortal","getClassList","trim","split","pp","Popup","onOpen","onClose","setDOMContent","off","isOpen","anchor","maxWidth","setMaxWidth","prevClassList","nextClassList","c","has","removeClassName","addClassName","onCreate","arg1","arg2","arg3","context","ctrl","opts","onAdd","onRemove","hasControl","addControl","removeControl","useControl","_ref","AttributionControl","FullscreenControl","containerId","getElementById","_controlContainer","gc","GeolocateControl","setupUI","_setupUI","args","hasChildNodes","onGeolocate","onOutOfMaxBounds","onTrackUserLocationStart","onTrackUserLocationEnd","NavigationControl","ScaleControl","propsRef","prevProps","undefined","unit","setUnit","_Map","instance","Constructor","TypeError","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","o","allowArrayLike","it","Symbol","iterator","F","_e","normalCompletion","didErr","step","next","_e2"],"sourceRoot":""}